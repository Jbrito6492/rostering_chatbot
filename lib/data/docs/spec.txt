{
  "swagger": "2.0",
  "info": {
    "version": "1.1",
    "title": "OneRoster OpenAPI (JSON) Definition",
    "description": "The OneRoster service binding is available in WSDL/XSD and REST/JSON. The model is based upon the IMS PSM modelling approach.",
    "termsOfService": "Permission is granted to all parties to use excerpts from this document as needed in producing requests for proposals. The limited permissions granted above are perpetual and will not be revoked by IMS or its successors or assigns. THIS API DEFINITION IS BEING OFFERED WITHOUT ANY WARRANTY WHATSOEVER, AND IN PARTICULAR, ANY WARRANTY OF NONINFRINGEMENT IS EXPRESSLY DISCLAIMED. ANY USE OF THIS SPECIFICATION SHALL BE MADE ENTIRELY AT THE IMPLEMENTERS OWN RISK, AND NEITHER THE  CONSORTIUM, NOR ANY OF ITS MEMBERS OR SUBMITTERS, SHALL HAVE ANY LIABILITY WHATSOEVER TO ANY IMPLEMENTER OR THIRD PARTY FOR ANY DAMAGES OF ANY NATURE WHATSOEVER,  DIRECTLY OR INDIRECTLY, ARISING FROM THE USE OF THIS API DEFINITION.",
    "contact": {
      "name": "Lisa Mattson (COO), IMS Global ",
      "url": "http://www.imsglobal.org",
      "email": "lmattson@imsglobal.org"
    },
    "license": {
      "name": "IMS Global",
      "url": "https://www.imsglobal.org/license.html"
    }
  },
  "schemes": [
    "http",
    "https"
  ],
  "tags": [
    {
      "name": "AcademicSessionsManagement",
      "description": "This enables the management of academic sessions i.e. periods of academic activity."
    },
    {
      "name": "CategoriesManagement",
      "description": "This enables the management of Categories i.e. collections of LineItems."
    },
    {
      "name": "ClassesManagement",
      "description": "This enables the management of Classes i.e. scheduled learning of courses."
    },
    {
      "name": "CoursesManagement",
      "description": "This enables the management of Courses i.e. programme of study."
    },
    {
      "name": "DemographicsManagement",
      "description": "This enables the management of demographics information (each assigned to a specific user)."
    },
    {
      "name": "EnrollmentsManagement",
      "description": "This enables the management of the enrollments of users (teachers, students, etc.) on classes supplied by schools."
    },
    {
      "name": "GradingPeriodsManagement",
      "description": "This enables the management of grading periods i.e. specific academic sessions."
    },
    {
      "name": "LineItemsManagement",
      "description": "This enables the management of lineItems i.e. the set of results for the asessment of some activity."
    },
    {
      "name": "OrgsManagement",
      "description": "This enables the management of orgs i.e. an organization involved in the learning in some form or other."
    },
    {
      "name": "ResourcesManagement",
      "description": "This enables the management of information about resources i.e. the allocation of resources to classes and/or courses. This excludes the exchange of the actual resources themselves."
    },
    {
      "name": "ResultsManagement",
      "description": "This enables the management of results i.e. the score allocated to a learner from the assessent of a learning activity. Resukt are collecetd as a set of 'lineItems'."
    },
    {
      "name": "SchoolsManagement",
      "description": "This enables the management of information about schools. A school is a type of 'org'."
    },
    {
      "name": "StudentsManagement",
      "description": "This enables the management of information about students (a student is a type of 'user')."
    },
    {
      "name": "TeachersManagement",
      "description": "This enables the management of information about teachers (a teacher is a type of 'user')."
    },
    {
      "name": "TermsManagement",
      "description": "This enables the management of information about terms (a term is a type of 'academicSession')."
    },
    {
      "name": "UsersManagement",
      "description": "This enables the management of information about users (this includes the set of 'students' and 'teachers')."
    }
  ],
  "securityDefinitions": {
    "OAuth2Security": {
      "type": "oauth2",
      "description": "The standard usage of OAuth 2.0 by IMS Global",
      "flow": "password",
      "tokenUrl": "http://www.imsglobal.org",
      "scopes": {
        "user": "All User Endpoints"
      }
    }
  },
  "security": [
    {
      "OAuth2Security": [
        "user"
      ]
    }
  ],
  "paths": {
    "/academicSessions": {
      "get": {
        "operationId": "getAcademicSessions",
        "summary": "The REST read request message for the getAcademicSessions() API call.",
        "tags": [
          "AcademicSessionsManagement"
        ],
        "description": "To read, get, a collection of academic sessions i.e. all academic sessions.",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "To define the download segmentation value i.e. the maximum number of records to be contained in the response.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "allowEmptyValue": false,
            "default": 100,
            "minimum": 1
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The number of the first record to be supplied in the segmented response message.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "allowEmptyValue": false,
            "default": 0,
            "minimum": 0
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Allows the client to resume retrieving results from where the previous page left off",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Identifies the sort criteria to be used for the records in the response message. Use with the orderBy parameter.",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "orderBy",
            "in": "query",
            "description": "The form of ordering for response to the sorted request i.e. ascending (asc) or descending (desc).",
            "required": false,
            "type": "string",
            "enum": [
              "acs",
              "desc"
            ],
            "allowEmptyValue": false
          },
          {
            "name": "filter",
            "in": "query",
            "description": "The filtering rules to be applied when identifying the records to be supplied in the response message.",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "fields",
            "in": "query",
            "description": "To identify the range of fields that should be supplied in the response message.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "...tbd...",
            "schema": {
              "$ref": "#/definitions/MultipleAcademicSessions.Type"
            },
            "headers": {
              "X-Total-Count": {
                "description": "The total number of resources that are available",
                "type": "integer"
              }
            }
          },
          "default": {
            "description": "StatusInfo Error Report",
            "schema": {
              "$ref": "#/definitions/imsx_StatusInfo.Type"
            }
          }
        }
      }
    },
    "/academicSessions/{sourcedId}": {
      "get": {
        "operationId": "getAcademicSession",
        "summary": "The REST read request message for the getAcademicSession() API call.",
        "tags": [
          "AcademicSessionsManagement"
        ],
        "description": "To read, get, a specific academic session.",
        "parameters": [
          {
            "name": "sourcedId",
            "in": "path",
            "description": "The unique identifier for this academic session.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "...tbd...",
            "schema": {
              "$ref": "#/definitions/SingleAcademicSession.Type"
            },
            "headers": {
              "X-Total-Count": {
                "description": "The total number of resources that are available",
                "type": "integer"
              }
            }
          },
          "default": {
            "description": "StatusInfo Error Report",
            "schema": {
              "$ref": "#/definitions/imsx_StatusInfo.Type"
            }
          }
        }
      }
    },
    "/categories": {
      "get": {
        "operationId": "getCategories",
        "summary": "The REST read request message for the getCategories() API call.",
        "tags": [
          "CategoriesManagement"
        ],
        "description": "...not supplied...",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "To define the download segmentation value i.e. the maximum number of records to be contained in the response.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "allowEmptyValue": false,
            "default": 100,
            "minimum": 1
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The number of the first record to be supplied in the segmented response message.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "allowEmptyValue": false,
            "default": 0,
            "minimum": 0
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Allows the client to resume retrieving results from where the previous page left off",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Identifies the sort criteria to be used for the records in the response message. Use with the orderBy parameter.",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "orderBy",
            "in": "query",
            "description": "The form of ordering for response to the sorted request i.e. ascending (asc) or descending (desc).",
            "required": false,
            "type": "string",
            "enum": [
              "acs",
              "desc"
            ],
            "allowEmptyValue": false
          },
          {
            "name": "filter",
            "in": "query",
            "description": "The filtering rules to be applied when identifying the records to be supplied in the response message.",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "fields",
            "in": "query",
            "description": "To identify the range of fields that should be supplied in the response message.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "...tbd...",
            "schema": {
              "$ref": "#/definitions/Categories.Type"
            },
            "headers": {
              "X-Total-Count": {
                "description": "The total number of resources that are available",
                "type": "integer"
              }
            }
          },
          "default": {
            "description": "StatusInfo Error Report",
            "schema": {
              "$ref": "#/definitions/imsx_StatusInfo.Type"
            }
          }
        }
      }
    },
    "/categories/{sourcedId}": {
      "get": {
        "operationId": "getCategory",
        "summary": "The REST read request message for the getCategory() API call.",
        "tags": [
          "CategoriesManagement"
        ],
        "description": "...not supplied...",
        "parameters": [
          {
            "name": "sourcedId",
            "in": "path",
            "description": "...tbd...",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "...tbd...",
            "schema": {
              "$ref": "#/definitions/SingleCategory.Type"
            },
            "headers": {
              "X-Total-Count": {
                "description": "The total number of resources that are available",
                "type": "integer"
              }
            }
          },
          "default": {
            "description": "StatusInfo Error Report",
            "schema": {
              "$ref": "#/definitions/imsx_StatusInfo.Type"
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteCategory",
        "summary": "The REST delete request message for the deleteCategory() API call.",
        "tags": [
          "CategoriesManagement"
        ],
        "description": "...not supplied...",
        "parameters": [
          {
            "name": "sourcedId",
            "in": "path",
            "description": "...tbd...",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "...tbd..."
          },
          "default": {
            "description": "StatusInfo Error Report",
            "schema": {
              "$ref": "#/definitions/imsx_StatusInfo.Type"
            }
          }
        }
      },
      "put": {
        "operationId": "putCategory",
        "summary": "The REST create request message for the putCategory() API call.",
        "tags": [
          "CategoriesManagement"
        ],
        "description": "...not supplied...",
        "parameters": [
          {
            "name": "sourcedId",
            "in": "path",
            "description": "...tbd...",
            "required": true,
            "type": "string"
          },
          {
            "name": "category",
            "in": "body",
            "description": "...tbd...",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SingleCategory.Type"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "...tbd..."
          },
          "default": {
            "description": "StatusInfo Error Report",
            "schema": {
              "$ref": "#/definitions/imsx_StatusInfo.Type"
            }
          }
        }
      }
    },
    "/classes": {
      "get": {
        "operationId": "getClasses",
        "summary": "The REST read request message for the getClasses() API call.",
        "tags": [
          "ClassesManagement"
        ],
        "description": "To read, get, a collection of classes i.e. all classes.",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "To define the download segmentation value i.e. the maximum number of records to be contained in the response.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "allowEmptyValue": false,
            "default": 100,
            "minimum": 1
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The number of the first record to be supplied in the segmented response message.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "allowEmptyValue": false,
            "default": 0,
            "minimum": 0
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Allows the client to resume retrieving results from where the previous page left off",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Identifies the sort criteria to be used for the records in the response message. Use with the orderBy parameter.",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "orderBy",
            "in": "query",
            "description": "The form of ordering for response to the sorted request i.e. ascending (asc) or descending (desc).",
            "required": false,
            "type": "string",
            "enum": [
              "acs",
              "desc"
            ],
            "allowEmptyValue": false
          },
          {
            "name": "filter",
            "in": "query",
            "description": "The filtering rules to be applied when identifying the records to be supplied in the response message.",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "fields",
            "in": "query",
            "description": "To identify the range of fields that should be supplied in the response message.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "...tbd...",
            "schema": {
              "$ref": "#/definitions/Classes.Type"
            },
            "headers": {
              "X-Total-Count": {
                "description": "The total number of resources that are available",
                "type": "integer"
              }
            }
          },
          "default": {
            "description": "StatusInfo Error Report",
            "schema": {
              "$ref": "#/definitions/imsx_StatusInfo.Type"
            }
          }
        }
      }
    },
    "/classes/{classSourcedId}/lineItems/{lineItemSourcedId}/results": {
      "get": {
        "operationId": "getResultsForLineItemForClass",
        "summary": "The REST read request message for the getResultsForLineItemForClass() API call.",
        "tags": [
          "ResultsManagement"
        ],
        "description": "...not supplied...",
        "parameters": [
          {
            "name": "classSourcedId",
            "in": "path",
            "description": "...tbd...",
            "required": true,
            "type": "string"
          },
          {
            "name": "lineItemSourcedId",
            "in": "path",
            "description": "...tbd...",
            "required": true,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "To define the download segmentation value i.e. the maximum number of records to be contained in the response.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "allowEmptyValue": false,
            "default": 100,
            "minimum": 1
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The number of the first record to be supplied in the segmented response message.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "allowEmptyValue": false,
            "default": 0,
            "minimum": 0
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Allows the client to resume retrieving results from where the previous page left off",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Identifies the sort criteria to be used for the records in the response message. Use with the orderBy parameter.",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "orderBy",
            "in": "query",
            "description": "The form of ordering for response to the sorted request i.e. ascending (asc) or descending (desc).",
            "required": false,
            "type": "string",
            "enum": [
              "acs",
              "desc"
            ],
            "allowEmptyValue": false
          },
          {
            "name": "filter",
            "in": "query",
            "description": "The filtering rules to be applied when identifying the records to be supplied in the response message.",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "fields",
            "in": "query",
            "description": "To identify the range of fields that should be supplied in the response message.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "...tbd...",
            "schema": {
              "$ref": "#/definitions/Results.Type"
            },
            "headers": {
              "X-Total-Count": {
                "description": "The total number of resources that are available",
                "type": "integer"
              }
            }
          },
          "default": {
            "description": "StatusInfo Error Report",
            "schema": {
              "$ref": "#/definitions/imsx_StatusInfo.Type"
            }
          }
        }
      }
    },
    "/classes/{classSourcedId}/lineItems": {
      "get": {
        "operationId": "getLineItemsForClass",
        "summary": "The REST read request message for the getLineItemsForClass() API call.",
        "tags": [
          "LineItemsManagement"
        ],
        "description": "...not supplied...",
        "parameters": [
          {
            "name": "classSourcedId",
            "in": "path",
            "description": "...tbd...",
            "required": true,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "To define the download segmentation value i.e. the maximum number of records to be contained in the response.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "allowEmptyValue": false,
            "default": 100,
            "minimum": 1
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The number of the first record to be supplied in the segmented response message.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "allowEmptyValue": false,
            "default": 0,
            "minimum": 0
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Allows the client to resume retrieving results from where the previous page left off",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Identifies the sort criteria to be used for the records in the response message. Use with the orderBy parameter.",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "orderBy",
            "in": "query",
            "description": "The form of ordering for response to the sorted request i.e. ascending (asc) or descending (desc).",
            "required": false,
            "type": "string",
            "enum": [
              "acs",
              "desc"
            ],
            "allowEmptyValue": false
          },
          {
            "name": "filter",
            "in": "query",
            "description": "The filtering rules to be applied when identifying the records to be supplied in the response message.",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "fields",
            "in": "query",
            "description": "To identify the range of fields that should be supplied in the response message.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "...tbd...",
            "schema": {
              "$ref": "#/definitions/LineItems.Type"
            },
            "headers": {
              "X-Total-Count": {
                "description": "The total number of resources that are available",
                "type": "integer"
              }
            }
          },
          "default": {
            "description": "StatusInfo Error Report",
            "schema": {
              "$ref": "#/definitions/imsx_StatusInfo.Type"
            }
          }
        }
      }
    },
    "/classes/{classSourcedId}/resources": {
      "get": {
        "operationId": "getResourcesForClass",
        "summary": "The REST read request message for the getResourcesForClass() API call.",
        "tags": [
          "ResourcesManagement"
        ],
        "description": "...not supplied...",
        "parameters": [
          {
            "name": "classSourcedId",
            "in": "path",
            "description": "...tbd...",
            "required": true,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "To define the download segmentation value i.e. the maximum number of records to be contained in the response.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "allowEmptyValue": false,
            "default": 100,
            "minimum": 1
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The number of the first record to be supplied in the segmented response message.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "allowEmptyValue": false,
            "default": 0,
            "minimum": 0
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Allows the client to resume retrieving results from where the previous page left off",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Identifies the sort criteria to be used for the records in the response message. Use with the orderBy parameter.",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "orderBy",
            "in": "query",
            "description": "The form of ordering for response to the sorted request i.e. ascending (asc) or descending (desc).",
            "required": false,
            "type": "string",
            "enum": [
              "acs",
              "desc"
            ],
            "allowEmptyValue": false
          },
          {
            "name": "filter",
            "in": "query",
            "description": "The filtering rules to be applied when identifying the records to be supplied in the response message.",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "fields",
            "in": "query",
            "description": "To identify the range of fields that should be supplied in the response message.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "...tbd...",
            "schema": {
              "$ref": "#/definitions/Resources.Type"
            },
            "headers": {
              "X-Total-Count": {
                "description": "The total number of resources that are available",
                "type": "integer"
              }
            }
          },
          "default": {
            "description": "StatusInfo Error Report",
            "schema": {
              "$ref": "#/definitions/imsx_StatusInfo.Type"
            }
          }
        }
      }
    },
    "/classes/{classSourcedId}/results": {
      "get": {
        "operationId": "getResultsForClass",
        "summary": "The REST read request message for the getResultsForClass() API call.",
        "tags": [
          "ResultsManagement"
        ],
        "description": "...not supplied...",
        "parameters": [
          {
            "name": "classSourcedId",
            "in": "path",
            "description": "...tbd...",
            "required": true,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "To define the download segmentation value i.e. the maximum number of records to be contained in the response.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "allowEmptyValue": false,
            "default": 100,
            "minimum": 1
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The number of the first record to be supplied in the segmented response message.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "allowEmptyValue": false,
            "default": 0,
            "minimum": 0
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Allows the client to resume retrieving results from where the previous page left off",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Identifies the sort criteria to be used for the records in the response message. Use with the orderBy parameter.",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "orderBy",
            "in": "query",
            "description": "The form of ordering for response to the sorted request i.e. ascending (asc) or descending (desc).",
            "required": false,
            "type": "string",
            "enum": [
              "acs",
              "desc"
            ],
            "allowEmptyValue": false
          },
          {
            "name": "filter",
            "in": "query",
            "description": "The filtering rules to be applied when identifying the records to be supplied in the response message.",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "fields",
            "in": "query",
            "description": "To identify the range of fields that should be supplied in the response message.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "...tbd...",
            "schema": {
              "$ref": "#/definitions/Results.Type"
            },
            "headers": {
              "X-Total-Count": {
                "description": "The total number of resources that are available",
                "type": "integer"
              }
            }
          },
          "default": {
            "description": "StatusInfo Error Report",
            "schema": {
              "$ref": "#/definitions/imsx_StatusInfo.Type"
            }
          }
        }
      }
    },
    "/classes/{classSourcedId}/students": {
      "get": {
        "operationId": "getStudentsForClass",
        "summary": "The REST read request message for the getStudentsForClass() API call.",
        "tags": [
          "StudentsManagement"
        ],
        "description": "...not supplied...",
        "parameters": [
          {
            "name": "classSourcedId",
            "in": "path",
            "description": "...tbd...",
            "required": true,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "To define the download segmentation value i.e. the maximum number of records to be contained in the response.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "allowEmptyValue": false,
            "default": 100,
            "minimum": 1
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The number of the first record to be supplied in the segmented response message.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "allowEmptyValue": false,
            "default": 0,
            "minimum": 0
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Allows the client to resume retrieving results from where the previous page left off",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Identifies the sort criteria to be used for the records in the response message. Use with the orderBy parameter.",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "orderBy",
            "in": "query",
            "description": "The form of ordering for response to the sorted request i.e. ascending (asc) or descending (desc).",
            "required": false,
            "type": "string",
            "enum": [
              "acs",
              "desc"
            ],
            "allowEmptyValue": false
          },
          {
            "name": "filter",
            "in": "query",
            "description": "The filtering rules to be applied when identifying the records to be supplied in the response message.",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "fields",
            "in": "query",
            "description": "To identify the range of fields that should be supplied in the response message.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "...tbd...",
            "schema": {
              "$ref": "#/definitions/Users.Type"
            },
            "headers": {
              "X-Total-Count": {
                "description": "The total number of resources that are available",
                "type": "integer"
              }
            }
          },
          "default": {
            "description": "StatusInfo Error Report",
            "schema": {
              "$ref": "#/definitions/imsx_StatusInfo.Type"
            }
          }
        }
      }
    },
    "/classes/{classSourcedId}/students/{studentSourcedId}/results": {
      "get": {
        "operationId": "getResultsForStudentForClass",
        "summary": "The REST read request message for the getResultsForStudentForClass() API call.",
        "tags": [
          "ResultsManagement"
        ],
        "description": "...not supplied...",
        "parameters": [
          {
            "name": "classSourcedId",
            "in": "path",
            "description": "...tbd...",
            "required": true,
            "type": "string"
          },
          {
            "name": "studentSourcedId",
            "in": "path",
            "description": "...tbd...",
            "required": true,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "To define the download segmentation value i.e. the maximum number of records to be contained in the response.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "allowEmptyValue": false,
            "default": 100,
            "minimum": 1
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The number of the first record to be supplied in the segmented response message.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "allowEmptyValue": false,
            "default": 0,
            "minimum": 0
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Allows the client to resume retrieving results from where the previous page left off",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Identifies the sort criteria to be used for the records in the response message. Use with the orderBy parameter.",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "orderBy",
            "in": "query",
            "description": "The form of ordering for response to the sorted request i.e. ascending (asc) or descending (desc).",
            "required": false,
            "type": "string",
            "enum": [
              "acs",
              "desc"
            ],
            "allowEmptyValue": false
          },
          {
            "name": "filter",
            "in": "query",
            "description": "The filtering rules to be applied when identifying the records to be supplied in the response message.",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "fields",
            "in": "query",
            "description": "To identify the range of fields that should be supplied in the response message.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "...tbd...",
            "schema": {
              "$ref": "#/definitions/Results.Type"
            },
            "headers": {
              "X-Total-Count": {
                "description": "The total number of resources that are available",
                "type": "integer"
              }
            }
          },
          "default": {
            "description": "StatusInfo Error Report",
            "schema": {
              "$ref": "#/definitions/imsx_StatusInfo.Type"
            }
          }
        }
      }
    },
    "/classes/{classSourcedId}/teachers": {
      "get": {
        "operationId": "getTeachersForClass",
        "summary": "The REST read request message for the getTeachersForClass() API call.",
        "tags": [
          "TeachersManagement"
        ],
        "description": "...not supplied...",
        "parameters": [
          {
            "name": "classSourcedId",
            "in": "path",
            "description": "...tbd...",
            "required": true,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "To define the download segmentation value i.e. the maximum number of records to be contained in the response.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "allowEmptyValue": false,
            "default": 100,
            "minimum": 1
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The number of the first record to be supplied in the segmented response message.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "allowEmptyValue": false,
            "default": 0,
            "minimum": 0
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Allows the client to resume retrieving results from where the previous page left off",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Identifies the sort criteria to be used for the records in the response message. Use with the orderBy parameter.",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "orderBy",
            "in": "query",
            "description": "The form of ordering for response to the sorted request i.e. ascending (asc) or descending (desc).",
            "required": false,
            "type": "string",
            "enum": [
              "acs",
              "desc"
            ],
            "allowEmptyValue": false
          },
          {
            "name": "filter",
            "in": "query",
            "description": "The filtering rules to be applied when identifying the records to be supplied in the response message.",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "fields",
            "in": "query",
            "description": "To identify the range of fields that should be supplied in the response message.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "...tbd...",
            "schema": {
              "$ref": "#/definitions/Users.Type"
            },
            "headers": {
              "X-Total-Count": {
                "description": "The total number of resources that are available",
                "type": "integer"
              }
            }
          },
          "default": {
            "description": "StatusInfo Error Report",
            "schema": {
              "$ref": "#/definitions/imsx_StatusInfo.Type"
            }
          }
        }
      }
    },
    "/classes/{sourcedId}": {
      "get": {
        "operationId": "getClass",
        "summary": "The REST read request message for the getClass() API call.",
        "tags": [
          "ClassesManagement"
        ],
        "description": "To read, get, a specific class.",
        "parameters": [
          {
            "name": "sourcedId",
            "in": "path",
            "description": "The unique identifier for this class.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "...tbd...",
            "schema": {
              "$ref": "#/definitions/SingleClass.Type"
            },
            "headers": {
              "X-Total-Count": {
                "description": "The total number of resources that are available",
                "type": "integer"
              }
            }
          },
          "default": {
            "description": "StatusInfo Error Report",
            "schema": {
              "$ref": "#/definitions/imsx_StatusInfo.Type"
            }
          }
        }
      }
    },
    "/courses": {
      "get": {
        "operationId": "getCourses",
        "summary": "The REST read request message for the getCourses() API call.",
        "tags": [
          "CoursesManagement"
        ],
        "description": "To read, get, a collection of courses i.e. all courses.",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "To define the download segmentation value i.e. the maximum number of records to be contained in the response.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "allowEmptyValue": false,
            "default": 100,
            "minimum": 1
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The number of the first record to be supplied in the segmented response message.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "allowEmptyValue": false,
            "default": 0,
            "minimum": 0
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Allows the client to resume retrieving results from where the previous page left off",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Identifies the sort criteria to be used for the records in the response message. Use with the orderBy parameter.",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "orderBy",
            "in": "query",
            "description": "The form of ordering for response to the sorted request i.e. ascending (asc) or descending (desc).",
            "required": false,
            "type": "string",
            "enum": [
              "acs",
              "desc"
            ],
            "allowEmptyValue": false
          },
          {
            "name": "filter",
            "in": "query",
            "description": "The filtering rules to be applied when identifying the records to be supplied in the response message.",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "fields",
            "in": "query",
            "description": "To identify the range of fields that should be supplied in the response message.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "...tbd...",
            "schema": {
              "$ref": "#/definitions/Courses.Type"
            },
            "headers": {
              "X-Total-Count": {
                "description": "The total number of resources that are available",
                "type": "integer"
              }
            }
          },
          "default": {
            "description": "StatusInfo Error Report",
            "schema": {
              "$ref": "#/definitions/imsx_StatusInfo.Type"
            }
          }
        }
      }
    },
    "/courses/{courseSourcedId}/classes": {
      "get": {
        "operationId": "getClassesForCourse",
        "summary": "The REST read request message for the getClassesForCourse() API call.",
        "tags": [
          "ClassesManagement"
        ],
        "description": "...not supplied...",
        "parameters": [
          {
            "name": "courseSourcedId",
            "in": "path",
            "description": "...tbd...",
            "required": true,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "To define the download segmentation value i.e. the maximum number of records to be contained in the response.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "allowEmptyValue": false,
            "default": 100,
            "minimum": 1
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The number of the first record to be supplied in the segmented response message.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "allowEmptyValue": false,
            "default": 0,
            "minimum": 0
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Allows the client to resume retrieving results from where the previous page left off",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Identifies the sort criteria to be used for the records in the response message. Use with the orderBy parameter.",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "orderBy",
            "in": "query",
            "description": "The form of ordering for response to the sorted request i.e. ascending (asc) or descending (desc).",
            "required": false,
            "type": "string",
            "enum": [
              "acs",
              "desc"
            ],
            "allowEmptyValue": false
          },
          {
            "name": "filter",
            "in": "query",
            "description": "The filtering rules to be applied when identifying the records to be supplied in the response message.",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "fields",
            "in": "query",
            "description": "To identify the range of fields that should be supplied in the response message.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "...tbd...",
            "schema": {
              "$ref": "#/definitions/Classes.Type"
            },
            "headers": {
              "X-Total-Count": {
                "description": "The total number of resources that are available",
                "type": "integer"
              }
            }
          },
          "default": {
            "description": "StatusInfo Error Report",
            "schema": {
              "$ref": "#/definitions/imsx_StatusInfo.Type"
            }
          }
        }
      }
    },
    "/courses/{courseSourcedId}/resources": {
      "get": {
        "operationId": "getResourcesForCourse",
        "summary": "The REST read request message for the getResourcesForCourse() API call.",
        "tags": [
          "ResourcesManagement"
        ],
        "description": "...not supplied...",
        "parameters": [
          {
            "name": "courseSourcedId",
            "in": "path",
            "description": "...tbd...",
            "required": true,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "To define the download segmentation value i.e. the maximum number of records to be contained in the response.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "allowEmptyValue": false,
            "default": 100,
            "minimum": 1
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The number of the first record to be supplied in the segmented response message.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "allowEmptyValue": false,
            "default": 0,
            "minimum": 0
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Allows the client to resume retrieving results from where the previous page left off",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Identifies the sort criteria to be used for the records in the response message. Use with the orderBy parameter.",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "orderBy",
            "in": "query",
            "description": "The form of ordering for response to the sorted request i.e. ascending (asc) or descending (desc).",
            "required": false,
            "type": "string",
            "enum": [
              "acs",
              "desc"
            ],
            "allowEmptyValue": false
          },
          {
            "name": "filter",
            "in": "query",
            "description": "The filtering rules to be applied when identifying the records to be supplied in the response message.",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "fields",
            "in": "query",
            "description": "To identify the range of fields that should be supplied in the response message.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "...tbd...",
            "schema": {
              "$ref": "#/definitions/Resources.Type"
            },
            "headers": {
              "X-Total-Count": {
                "description": "The total number of resources that are available",
                "type": "integer"
              }
            }
          },
          "default": {
            "description": "StatusInfo Error Report",
            "schema": {
              "$ref": "#/definitions/imsx_StatusInfo.Type"
            }
          }
        }
      }
    },
    "/courses/{sourcedId}": {
      "get": {
        "operationId": "getCourse",
        "summary": "The REST read request message for the getCourse() API call.",
        "tags": [
          "CoursesManagement"
        ],
        "description": "To read, get, a specific course.",
        "parameters": [
          {
            "name": "sourcedId",
            "in": "path",
            "description": "The unique identifier for this course.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "...tbd...",
            "schema": {
              "$ref": "#/definitions/SingleCourse.Type"
            },
            "headers": {
              "X-Total-Count": {
                "description": "The total number of resources that are available",
                "type": "integer"
              }
            }
          },
          "default": {
            "description": "StatusInfo Error Report",
            "schema": {
              "$ref": "#/definitions/imsx_StatusInfo.Type"
            }
          }
        }
      }
    },
    "/demographics": {
      "get": {
        "operationId": "getDemographics",
        "summary": "The REST read request message for the getDemographics() API call.",
        "tags": [
          "DemographicsManagement"
        ],
        "description": "...not supplied...",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "To define the download segmentation value i.e. the maximum number of records to be contained in the response.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "allowEmptyValue": false,
            "default": 100,
            "minimum": 1
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The number of the first record to be supplied in the segmented response message.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "allowEmptyValue": false,
            "default": 0,
            "minimum": 0
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Allows the client to resume retrieving results from where the previous page left off",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Identifies the sort criteria to be used for the records in the response message. Use with the orderBy parameter.",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "orderBy",
            "in": "query",
            "description": "The form of ordering for response to the sorted request i.e. ascending (asc) or descending (desc).",
            "required": false,
            "type": "string",
            "enum": [
              "acs",
              "desc"
            ],
            "allowEmptyValue": false
          },
          {
            "name": "filter",
            "in": "query",
            "description": "The filtering rules to be applied when identifying the records to be supplied in the response message.",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "fields",
            "in": "query",
            "description": "To identify the range of fields that should be supplied in the response message.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "...tbd...",
            "schema": {
              "$ref": "#/definitions/Demographics.Type"
            },
            "headers": {
              "X-Total-Count": {
                "description": "The total number of resources that are available",
                "type": "integer"
              }
            }
          },
          "default": {
            "description": "StatusInfo Error Report",
            "schema": {
              "$ref": "#/definitions/imsx_StatusInfo.Type"
            }
          }
        }
      }
    },
    "/demographics/{sourcedId}": {
      "get": {
        "operationId": "getDemographic",
        "summary": "The REST read request message for the getDemographic() API call.",
        "tags": [
          "DemographicsManagement"
        ],
        "description": "...not supplied...",
        "parameters": [
          {
            "name": "sourcedId",
            "in": "path",
            "description": "...tbd...",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "...tbd...",
            "schema": {
              "$ref": "#/definitions/SingleDemographics.Type"
            },
            "headers": {
              "X-Total-Count": {
                "description": "The total number of resources that are available",
                "type": "integer"
              }
            }
          },
          "default": {
            "description": "StatusInfo Error Report",
            "schema": {
              "$ref": "#/definitions/imsx_StatusInfo.Type"
            }
          }
        }
      }
    },
    "/enrollments": {
      "get": {
        "operationId": "getEnrollments",
        "summary": "The REST read request message for the getEnrollments() API call.",
        "tags": [
          "EnrollmentsManagement"
        ],
        "description": "...not supplied...",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "To define the download segmentation value i.e. the maximum number of records to be contained in the response.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "allowEmptyValue": false,
            "default": 100,
            "minimum": 1
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The number of the first record to be supplied in the segmented response message.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "allowEmptyValue": false,
            "default": 0,
            "minimum": 0
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Allows the client to resume retrieving results from where the previous page left off",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Identifies the sort criteria to be used for the records in the response message. Use with the orderBy parameter.",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "orderBy",
            "in": "query",
            "description": "The form of ordering for response to the sorted request i.e. ascending (asc) or descending (desc).",
            "required": false,
            "type": "string",
            "enum": [
              "acs",
              "desc"
            ],
            "allowEmptyValue": false
          },
          {
            "name": "filter",
            "in": "query",
            "description": "The filtering rules to be applied when identifying the records to be supplied in the response message.",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "fields",
            "in": "query",
            "description": "To identify the range of fields that should be supplied in the response message.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "...tbd...",
            "schema": {
              "$ref": "#/definitions/Enrollments.Type"
            },
            "headers": {
              "X-Total-Count": {
                "description": "The total number of resources that are available",
                "type": "integer"
              }
            }
          },
          "default": {
            "description": "StatusInfo Error Report",
            "schema": {
              "$ref": "#/definitions/imsx_StatusInfo.Type"
            }
          }
        }
      }
    },
    "/enrollments/{sourcedId}": {
      "get": {
        "operationId": "getEnrollment",
        "summary": "The REST read request message for the getEnrollment() API call.",
        "tags": [
          "EnrollmentsManagement"
        ],
        "description": "...not supplied...",
        "parameters": [
          {
            "name": "sourcedId",
            "in": "path",
            "description": "...tbd...",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "...tbd...",
            "schema": {
              "$ref": "#/definitions/SingleEnrollment.Type"
            },
            "headers": {
              "X-Total-Count": {
                "description": "The total number of resources that are available",
                "type": "integer"
              }
            }
          },
          "default": {
            "description": "StatusInfo Error Report",
            "schema": {
              "$ref": "#/definitions/imsx_StatusInfo.Type"
            }
          }
        }
      }
    },
    "/gradingPeriods": {
      "get": {
        "operationId": "getGradingPeriods",
        "summary": "The REST read request message for the getGradingPeriods() API call.",
        "tags": [
          "GradingPeriodsManagement"
        ],
        "description": "...not supplied...",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "To define the download segmentation value i.e. the maximum number of records to be contained in the response.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "allowEmptyValue": false,
            "default": 100,
            "minimum": 1
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The number of the first record to be supplied in the segmented response message.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "allowEmptyValue": false,
            "default": 0,
            "minimum": 0
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Allows the client to resume retrieving results from where the previous page left off",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Identifies the sort criteria to be used for the records in the response message. Use with the orderBy parameter.",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "orderBy",
            "in": "query",
            "description": "The form of ordering for response to the sorted request i.e. ascending (asc) or descending (desc).",
            "required": false,
            "type": "string",
            "enum": [
              "acs",
              "desc"
            ],
            "allowEmptyValue": false
          },
          {
            "name": "filter",
            "in": "query",
            "description": "The filtering rules to be applied when identifying the records to be supplied in the response message.",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "fields",
            "in": "query",
            "description": "To identify the range of fields that should be supplied in the response message.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "...tbd...",
            "schema": {
              "$ref": "#/definitions/MultipleAcademicSessions.Type"
            },
            "headers": {
              "X-Total-Count": {
                "description": "The total number of resources that are available",
                "type": "integer"
              }
            }
          },
          "default": {
            "description": "StatusInfo Error Report",
            "schema": {
              "$ref": "#/definitions/imsx_StatusInfo.Type"
            }
          }
        }
      }
    },
    "/gradingPeriods/{sourcedId}": {
      "get": {
        "operationId": "getGradingPeriod",
        "summary": "The REST read request message for the getGradingPeriod() API call.",
        "tags": [
          "GradingPeriodsManagement"
        ],
        "description": "...not supplied...",
        "parameters": [
          {
            "name": "sourcedId",
            "in": "path",
            "description": "...tbd...",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "...tbd...",
            "schema": {
              "$ref": "#/definitions/SingleAcademicSession.Type"
            },
            "headers": {
              "X-Total-Count": {
                "description": "The total number of resources that are available",
                "type": "integer"
              }
            }
          },
          "default": {
            "description": "StatusInfo Error Report",
            "schema": {
              "$ref": "#/definitions/imsx_StatusInfo.Type"
            }
          }
        }
      }
    },
    "/lineItems": {
      "get": {
        "operationId": "getLineItems",
        "summary": "The REST read request message for the getLineItems() API call.",
        "tags": [
          "LineItemsManagement"
        ],
        "description": "...not supplied...",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "To define the download segmentation value i.e. the maximum number of records to be contained in the response.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "allowEmptyValue": false,
            "default": 100,
            "minimum": 1
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The number of the first record to be supplied in the segmented response message.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "allowEmptyValue": false,
            "default": 0,
            "minimum": 0
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Allows the client to resume retrieving results from where the previous page left off",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Identifies the sort criteria to be used for the records in the response message. Use with the orderBy parameter.",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "orderBy",
            "in": "query",
            "description": "The form of ordering for response to the sorted request i.e. ascending (asc) or descending (desc).",
            "required": false,
            "type": "string",
            "enum": [
              "acs",
              "desc"
            ],
            "allowEmptyValue": false
          },
          {
            "name": "filter",
            "in": "query",
            "description": "The filtering rules to be applied when identifying the records to be supplied in the response message.",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "fields",
            "in": "query",
            "description": "To identify the range of fields that should be supplied in the response message.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "...tbd...",
            "schema": {
              "$ref": "#/definitions/LineItems.Type"
            },
            "headers": {
              "X-Total-Count": {
                "description": "The total number of resources that are available",
                "type": "integer"
              }
            }
          },
          "default": {
            "description": "StatusInfo Error Report",
            "schema": {
              "$ref": "#/definitions/imsx_StatusInfo.Type"
            }
          }
        }
      }
    },
    "/lineItems/{sourcedId}": {
      "get": {
        "operationId": "getLineItem",
        "summary": "The REST read request message for the getLineItem() API call.",
        "tags": [
          "LineItemsManagement"
        ],
        "description": "...not supplied...",
        "parameters": [
          {
            "name": "sourcedId",
            "in": "path",
            "description": "...tbd...",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "...tbd...",
            "schema": {
              "$ref": "#/definitions/SingleLineItem.Type"
            },
            "headers": {
              "X-Total-Count": {
                "description": "The total number of resources that are available",
                "type": "integer"
              }
            }
          },
          "default": {
            "description": "StatusInfo Error Report",
            "schema": {
              "$ref": "#/definitions/imsx_StatusInfo.Type"
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteLineItem",
        "summary": "The REST delete request message for the deleteLineItem() API call.",
        "tags": [
          "LineItemsManagement"
        ],
        "description": "...not supplied...",
        "parameters": [
          {
            "name": "sourcedId",
            "in": "path",
            "description": "...tbd...",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "...tbd..."
          },
          "default": {
            "description": "StatusInfo Error Report",
            "schema": {
              "$ref": "#/definitions/imsx_StatusInfo.Type"
            }
          }
        }
      },
      "put": {
        "operationId": "putLineItem",
        "summary": "The REST create request message for the putLineItem() API call.",
        "tags": [
          "LineItemsManagement"
        ],
        "description": "...not supplied...",
        "parameters": [
          {
            "name": "sourcedId",
            "in": "path",
            "description": "...tbd...",
            "required": true,
            "type": "string"
          },
          {
            "name": "lineItem",
            "in": "body",
            "description": "...tbd...",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SingleLineItem.Type"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "...tbd..."
          },
          "default": {
            "description": "StatusInfo Error Report",
            "schema": {
              "$ref": "#/definitions/imsx_StatusInfo.Type"
            }
          }
        }
      }
    },
    "/orgs": {
      "get": {
        "operationId": "getOrgs",
        "summary": "The REST read request message for the getOrgs() API call.",
        "tags": [
          "OrgsManagement"
        ],
        "description": "...not supplied...",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "To define the download segmentation value i.e. the maximum number of records to be contained in the response.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "allowEmptyValue": false,
            "default": 100,
            "minimum": 1
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The number of the first record to be supplied in the segmented response message.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "allowEmptyValue": false,
            "default": 0,
            "minimum": 0
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Allows the client to resume retrieving results from where the previous page left off",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Identifies the sort criteria to be used for the records in the response message. Use with the orderBy parameter.",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "orderBy",
            "in": "query",
            "description": "The form of ordering for response to the sorted request i.e. ascending (asc) or descending (desc).",
            "required": false,
            "type": "string",
            "enum": [
              "acs",
              "desc"
            ],
            "allowEmptyValue": false
          },
          {
            "name": "filter",
            "in": "query",
            "description": "The filtering rules to be applied when identifying the records to be supplied in the response message.",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "fields",
            "in": "query",
            "description": "To identify the range of fields that should be supplied in the response message.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "...tbd...",
            "schema": {
              "$ref": "#/definitions/Orgs.Type"
            },
            "headers": {
              "X-Total-Count": {
                "description": "The total number of resources that are available",
                "type": "integer"
              }
            }
          },
          "default": {
            "description": "StatusInfo Error Report",
            "schema": {
              "$ref": "#/definitions/imsx_StatusInfo.Type"
            }
          }
        }
      }
    },
    "/orgs/{sourcedId}": {
      "get": {
        "operationId": "getOrg",
        "summary": "The REST read request message for the getOrg() API call.",
        "tags": [
          "OrgsManagement"
        ],
        "description": "...not supplied...",
        "parameters": [
          {
            "name": "sourcedId",
            "in": "path",
            "description": "...tbd...",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "...tbd...",
            "schema": {
              "$ref": "#/definitions/SingleOrg.Type"
            },
            "headers": {
              "X-Total-Count": {
                "description": "The total number of resources that are available",
                "type": "integer"
              }
            }
          },
          "default": {
            "description": "StatusInfo Error Report",
            "schema": {
              "$ref": "#/definitions/imsx_StatusInfo.Type"
            }
          }
        }
      }
    },
    "/resources": {
      "get": {
        "operationId": "getResources",
        "summary": "The REST read request message for the getResources() API call.",
        "tags": [
          "ResourcesManagement"
        ],
        "description": "...not supplied...",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "To define the download segmentation value i.e. the maximum number of records to be contained in the response.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "allowEmptyValue": false,
            "default": 100,
            "minimum": 1
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The number of the first record to be supplied in the segmented response message.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "allowEmptyValue": false,
            "default": 0,
            "minimum": 0
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Allows the client to resume retrieving results from where the previous page left off",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Identifies the sort criteria to be used for the records in the response message. Use with the orderBy parameter.",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "orderBy",
            "in": "query",
            "description": "The form of ordering for response to the sorted request i.e. ascending (asc) or descending (desc).",
            "required": false,
            "type": "string",
            "enum": [
              "acs",
              "desc"
            ],
            "allowEmptyValue": false
          },
          {
            "name": "filter",
            "in": "query",
            "description": "The filtering rules to be applied when identifying the records to be supplied in the response message.",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "fields",
            "in": "query",
            "description": "To identify the range of fields that should be supplied in the response message.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "...tbd...",
            "schema": {
              "$ref": "#/definitions/Resources.Type"
            },
            "headers": {
              "X-Total-Count": {
                "description": "The total number of resources that are available",
                "type": "integer"
              }
            }
          },
          "default": {
            "description": "StatusInfo Error Report",
            "schema": {
              "$ref": "#/definitions/imsx_StatusInfo.Type"
            }
          }
        }
      }
    },
    "/resources/{sourcedId}": {
      "get": {
        "operationId": "getResource",
        "summary": "The REST read request message for the getResource() API call.",
        "tags": [
          "ResourcesManagement"
        ],
        "description": "...not supplied...",
        "parameters": [
          {
            "name": "sourcedId",
            "in": "path",
            "description": "...tbd...",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "...tbd...",
            "schema": {
              "$ref": "#/definitions/SingleResource.Type"
            },
            "headers": {
              "X-Total-Count": {
                "description": "The total number of resources that are available",
                "type": "integer"
              }
            }
          },
          "default": {
            "description": "StatusInfo Error Report",
            "schema": {
              "$ref": "#/definitions/imsx_StatusInfo.Type"
            }
          }
        }
      }
    },
    "/results": {
      "get": {
        "operationId": "getResults",
        "summary": "The REST read request message for the getResults() API call.",
        "tags": [
          "ResultsManagement"
        ],
        "description": "...not supplied...",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "To define the download segmentation value i.e. the maximum number of records to be contained in the response.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "allowEmptyValue": false,
            "default": 100,
            "minimum": 1
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The number of the first record to be supplied in the segmented response message.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "allowEmptyValue": false,
            "default": 0,
            "minimum": 0
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Allows the client to resume retrieving results from where the previous page left off",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Identifies the sort criteria to be used for the records in the response message. Use with the orderBy parameter.",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "orderBy",
            "in": "query",
            "description": "The form of ordering for response to the sorted request i.e. ascending (asc) or descending (desc).",
            "required": false,
            "type": "string",
            "enum": [
              "acs",
              "desc"
            ],
            "allowEmptyValue": false
          },
          {
            "name": "filter",
            "in": "query",
            "description": "The filtering rules to be applied when identifying the records to be supplied in the response message.",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "fields",
            "in": "query",
            "description": "To identify the range of fields that should be supplied in the response message.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "...tbd...",
            "schema": {
              "$ref": "#/definitions/Results.Type"
            },
            "headers": {
              "X-Total-Count": {
                "description": "The total number of resources that are available",
                "type": "integer"
              }
            }
          },
          "default": {
            "description": "StatusInfo Error Report",
            "schema": {
              "$ref": "#/definitions/imsx_StatusInfo.Type"
            }
          }
        }
      }
    },
    "/results/{sourcedId}": {
      "get": {
        "operationId": "getResult",
        "summary": "The REST read request message for the getResult() API call.",
        "tags": [
          "ResultsManagement"
        ],
        "description": "...not supplied...",
        "parameters": [
          {
            "name": "sourcedId",
            "in": "path",
            "description": "...tbd...",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "...tbd...",
            "schema": {
              "$ref": "#/definitions/SingleResult.Type"
            },
            "headers": {
              "X-Total-Count": {
                "description": "The total number of resources that are available",
                "type": "integer"
              }
            }
          },
          "default": {
            "description": "StatusInfo Error Report",
            "schema": {
              "$ref": "#/definitions/imsx_StatusInfo.Type"
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteResult",
        "summary": "The REST delete request message for the deleteResult() API call.",
        "tags": [
          "ResultsManagement"
        ],
        "description": "...not supplied...",
        "parameters": [
          {
            "name": "sourcedId",
            "in": "path",
            "description": "...tbd...",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "...tbd..."
          },
          "default": {
            "description": "StatusInfo Error Report",
            "schema": {
              "$ref": "#/definitions/imsx_StatusInfo.Type"
            }
          }
        }
      },
      "put": {
        "operationId": "putResult",
        "summary": "The REST create request message for the putResult() API call.",
        "tags": [
          "ResultsManagement"
        ],
        "description": "...not supplied...",
        "parameters": [
          {
            "name": "sourcedId",
            "in": "path",
            "description": "...tbd...",
            "required": true,
            "type": "string"
          },
          {
            "name": "result",
            "in": "body",
            "description": "...tbd...",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SingleResult.Type"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "...tbd..."
          },
          "default": {
            "description": "StatusInfo Error Report",
            "schema": {
              "$ref": "#/definitions/imsx_StatusInfo.Type"
            }
          }
        }
      }
    },
    "/schools": {
      "get": {
        "operationId": "getSchools",
        "summary": "The REST read request message for the getSchools() API call.",
        "tags": [
          "SchoolsManagement"
        ],
        "description": "...not supplied...",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "To define the download segmentation value i.e. the maximum number of records to be contained in the response.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "allowEmptyValue": false,
            "default": 100,
            "minimum": 1
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The number of the first record to be supplied in the segmented response message.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "allowEmptyValue": false,
            "default": 0,
            "minimum": 0
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Allows the client to resume retrieving results from where the previous page left off",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Identifies the sort criteria to be used for the records in the response message. Use with the orderBy parameter.",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "orderBy",
            "in": "query",
            "description": "The form of ordering for response to the sorted request i.e. ascending (asc) or descending (desc).",
            "required": false,
            "type": "string",
            "enum": [
              "acs",
              "desc"
            ],
            "allowEmptyValue": false
          },
          {
            "name": "filter",
            "in": "query",
            "description": "The filtering rules to be applied when identifying the records to be supplied in the response message.",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "fields",
            "in": "query",
            "description": "To identify the range of fields that should be supplied in the response message.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "...tbd...",
            "schema": {
              "$ref": "#/definitions/Orgs.Type"
            },
            "headers": {
              "X-Total-Count": {
                "description": "The total number of resources that are available",
                "type": "integer"
              }
            }
          },
          "default": {
            "description": "StatusInfo Error Report",
            "schema": {
              "$ref": "#/definitions/imsx_StatusInfo.Type"
            }
          }
        }
      }
    },
    "/schools/{schoolSourcedId}/classes": {
      "get": {
        "operationId": "getClassesForSchool",
        "summary": "The REST read request message for the getClassesForSchool() API call.",
        "tags": [
          "ClassesManagement"
        ],
        "description": "...not supplied...",
        "parameters": [
          {
            "name": "schoolSourcedId",
            "in": "path",
            "description": "...tbd...",
            "required": true,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "To define the download segmentation value i.e. the maximum number of records to be contained in the response.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "allowEmptyValue": false,
            "default": 100,
            "minimum": 1
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The number of the first record to be supplied in the segmented response message.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "allowEmptyValue": false,
            "default": 0,
            "minimum": 0
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Allows the client to resume retrieving results from where the previous page left off",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Identifies the sort criteria to be used for the records in the response message. Use with the orderBy parameter.",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "orderBy",
            "in": "query",
            "description": "The form of ordering for response to the sorted request i.e. ascending (asc) or descending (desc).",
            "required": false,
            "type": "string",
            "enum": [
              "acs",
              "desc"
            ],
            "allowEmptyValue": false
          },
          {
            "name": "filter",
            "in": "query",
            "description": "The filtering rules to be applied when identifying the records to be supplied in the response message.",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "fields",
            "in": "query",
            "description": "To identify the range of fields that should be supplied in the response message.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "...tbd...",
            "schema": {
              "$ref": "#/definitions/Classes.Type"
            },
            "headers": {
              "X-Total-Count": {
                "description": "The total number of resources that are available",
                "type": "integer"
              }
            }
          },
          "default": {
            "description": "StatusInfo Error Report",
            "schema": {
              "$ref": "#/definitions/imsx_StatusInfo.Type"
            }
          }
        }
      }
    },
    "/schools/{schoolSourcedId}/classes/{classSourcedId}/enrollments": {
      "get": {
        "operationId": "getEnrollmentsForClassInSchool",
        "summary": "The REST read request message for the getEnrollmentsForClassInSchool() API call.",
        "tags": [
          "EnrollmentsManagement"
        ],
        "description": "...not supplied...",
        "parameters": [
          {
            "name": "schoolSourcedId",
            "in": "path",
            "description": "...tbd...",
            "required": true,
            "type": "string"
          },
          {
            "name": "classSourcedId",
            "in": "path",
            "description": "...tbd...",
            "required": true,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "To define the download segmentation value i.e. the maximum number of records to be contained in the response.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "allowEmptyValue": false,
            "default": 100,
            "minimum": 1
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The number of the first record to be supplied in the segmented response message.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "allowEmptyValue": false,
            "default": 0,
            "minimum": 0
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Allows the client to resume retrieving results from where the previous page left off",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Identifies the sort criteria to be used for the records in the response message. Use with the orderBy parameter.",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "orderBy",
            "in": "query",
            "description": "The form of ordering for response to the sorted request i.e. ascending (asc) or descending (desc).",
            "required": false,
            "type": "string",
            "enum": [
              "acs",
              "desc"
            ],
            "allowEmptyValue": false
          },
          {
            "name": "filter",
            "in": "query",
            "description": "The filtering rules to be applied when identifying the records to be supplied in the response message.",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "fields",
            "in": "query",
            "description": "To identify the range of fields that should be supplied in the response message.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "...tbd...",
            "schema": {
              "$ref": "#/definitions/Enrollments.Type"
            },
            "headers": {
              "X-Total-Count": {
                "description": "The total number of resources that are available",
                "type": "integer"
              }
            }
          },
          "default": {
            "description": "StatusInfo Error Report",
            "schema": {
              "$ref": "#/definitions/imsx_StatusInfo.Type"
            }
          }
        }
      }
    },
    "/schools/{schoolSourcedId}/classes/{classSourcedId}/students": {
      "get": {
        "operationId": "getStudentsForClassInSchool",
        "summary": "The REST read request message for the getStudentsForClassInSchool() API call.",
        "tags": [
          "StudentsManagement"
        ],
        "description": "...not supplied...",
        "parameters": [
          {
            "name": "schoolSourcedId",
            "in": "path",
            "description": "...tbd...",
            "required": true,
            "type": "string"
          },
          {
            "name": "classSourcedId",
            "in": "path",
            "description": "...tbd...",
            "required": true,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "To define the download segmentation value i.e. the maximum number of records to be contained in the response.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "allowEmptyValue": false,
            "default": 100,
            "minimum": 1
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The number of the first record to be supplied in the segmented response message.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "allowEmptyValue": false,
            "default": 0,
            "minimum": 0
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Allows the client to resume retrieving results from where the previous page left off",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Identifies the sort criteria to be used for the records in the response message. Use with the orderBy parameter.",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "orderBy",
            "in": "query",
            "description": "The form of ordering for response to the sorted request i.e. ascending (asc) or descending (desc).",
            "required": false,
            "type": "string",
            "enum": [
              "acs",
              "desc"
            ],
            "allowEmptyValue": false
          },
          {
            "name": "filter",
            "in": "query",
            "description": "The filtering rules to be applied when identifying the records to be supplied in the response message.",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "fields",
            "in": "query",
            "description": "To identify the range of fields that should be supplied in the response message.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "...tbd...",
            "schema": {
              "$ref": "#/definitions/Users.Type"
            },
            "headers": {
              "X-Total-Count": {
                "description": "The total number of resources that are available",
                "type": "integer"
              }
            }
          },
          "default": {
            "description": "StatusInfo Error Report",
            "schema": {
              "$ref": "#/definitions/imsx_StatusInfo.Type"
            }
          }
        }
      }
    },
    "/schools/{schoolSourcedId}/classes/{classSourcedId}/teachers": {
      "get": {
        "operationId": "getTeachersForClassInSchool",
        "summary": "The REST read request message for the getTeachersForClassInSchool() API call.",
        "tags": [
          "TeachersManagement"
        ],
        "description": "...not supplied...",
        "parameters": [
          {
            "name": "schoolSourcedId",
            "in": "path",
            "description": "...tbd...",
            "required": true,
            "type": "string"
          },
          {
            "name": "classSourcedId",
            "in": "path",
            "description": "...tbd...",
            "required": true,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "To define the download segmentation value i.e. the maximum number of records to be contained in the response.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "allowEmptyValue": false,
            "default": 100,
            "minimum": 1
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The number of the first record to be supplied in the segmented response message.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "allowEmptyValue": false,
            "default": 0,
            "minimum": 0
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Allows the client to resume retrieving results from where the previous page left off",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Identifies the sort criteria to be used for the records in the response message. Use with the orderBy parameter.",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "orderBy",
            "in": "query",
            "description": "The form of ordering for response to the sorted request i.e. ascending (asc) or descending (desc).",
            "required": false,
            "type": "string",
            "enum": [
              "acs",
              "desc"
            ],
            "allowEmptyValue": false
          },
          {
            "name": "filter",
            "in": "query",
            "description": "The filtering rules to be applied when identifying the records to be supplied in the response message.",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "fields",
            "in": "query",
            "description": "To identify the range of fields that should be supplied in the response message.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "...tbd...",
            "schema": {
              "$ref": "#/definitions/Users.Type"
            },
            "headers": {
              "X-Total-Count": {
                "description": "The total number of resources that are available",
                "type": "integer"
              }
            }
          },
          "default": {
            "description": "StatusInfo Error Report",
            "schema": {
              "$ref": "#/definitions/imsx_StatusInfo.Type"
            }
          }
        }
      }
    },
    "/schools/{schoolSourcedId}/courses": {
      "get": {
        "operationId": "getCoursesForSchool",
        "summary": "The REST read request message for the getCoursesForSchool() API call.",
        "tags": [
          "CoursesManagement"
        ],
        "description": "...not supplied...",
        "parameters": [
          {
            "name": "schoolSourcedId",
            "in": "path",
            "description": "...tbd...",
            "required": true,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "To define the download segmentation value i.e. the maximum number of records to be contained in the response.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "allowEmptyValue": false,
            "default": 100,
            "minimum": 1
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The number of the first record to be supplied in the segmented response message.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "allowEmptyValue": false,
            "default": 0,
            "minimum": 0
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Allows the client to resume retrieving results from where the previous page left off",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Identifies the sort criteria to be used for the records in the response message. Use with the orderBy parameter.",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "orderBy",
            "in": "query",
            "description": "The form of ordering for response to the sorted request i.e. ascending (asc) or descending (desc).",
            "required": false,
            "type": "string",
            "enum": [
              "acs",
              "desc"
            ],
            "allowEmptyValue": false
          },
          {
            "name": "filter",
            "in": "query",
            "description": "The filtering rules to be applied when identifying the records to be supplied in the response message.",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "fields",
            "in": "query",
            "description": "To identify the range of fields that should be supplied in the response message.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "...tbd...",
            "schema": {
              "$ref": "#/definitions/Courses.Type"
            },
            "headers": {
              "X-Total-Count": {
                "description": "The total number of resources that are available",
                "type": "integer"
              }
            }
          },
          "default": {
            "description": "StatusInfo Error Report",
            "schema": {
              "$ref": "#/definitions/imsx_StatusInfo.Type"
            }
          }
        }
      }
    },
    "/schools/{schoolSourcedId}/enrollments": {
      "get": {
        "operationId": "getEnrollmentsForSchool",
        "summary": "The REST read request message for the getEnrollmentsForSchool() API call.",
        "tags": [
          "EnrollmentsManagement"
        ],
        "description": "...not supplied...",
        "parameters": [
          {
            "name": "schoolSourcedId",
            "in": "path",
            "description": "...tbd...",
            "required": true,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "To define the download segmentation value i.e. the maximum number of records to be contained in the response.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "allowEmptyValue": false,
            "default": 100,
            "minimum": 1
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The number of the first record to be supplied in the segmented response message.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "allowEmptyValue": false,
            "default": 0,
            "minimum": 0
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Allows the client to resume retrieving results from where the previous page left off",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Identifies the sort criteria to be used for the records in the response message. Use with the orderBy parameter.",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "orderBy",
            "in": "query",
            "description": "The form of ordering for response to the sorted request i.e. ascending (asc) or descending (desc).",
            "required": false,
            "type": "string",
            "enum": [
              "acs",
              "desc"
            ],
            "allowEmptyValue": false
          },
          {
            "name": "filter",
            "in": "query",
            "description": "The filtering rules to be applied when identifying the records to be supplied in the response message.",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "fields",
            "in": "query",
            "description": "To identify the range of fields that should be supplied in the response message.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "...tbd...",
            "schema": {
              "$ref": "#/definitions/Enrollments.Type"
            },
            "headers": {
              "X-Total-Count": {
                "description": "The total number of resources that are available",
                "type": "integer"
              }
            }
          },
          "default": {
            "description": "StatusInfo Error Report",
            "schema": {
              "$ref": "#/definitions/imsx_StatusInfo.Type"
            }
          }
        }
      }
    },
    "/schools/{schoolSourcedId}/students": {
      "get": {
        "operationId": "getStudentsForSchool",
        "summary": "The REST read request message for the getStudentsForSchool() API call.",
        "tags": [
          "StudentsManagement"
        ],
        "description": "...not supplied...",
        "parameters": [
          {
            "name": "schoolSourcedId",
            "in": "path",
            "description": "...tbd...",
            "required": true,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "To define the download segmentation value i.e. the maximum number of records to be contained in the response.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "allowEmptyValue": false,
            "default": 100,
            "minimum": 1
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The number of the first record to be supplied in the segmented response message.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "allowEmptyValue": false,
            "default": 0,
            "minimum": 0
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Allows the client to resume retrieving results from where the previous page left off",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Identifies the sort criteria to be used for the records in the response message. Use with the orderBy parameter.",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "orderBy",
            "in": "query",
            "description": "The form of ordering for response to the sorted request i.e. ascending (asc) or descending (desc).",
            "required": false,
            "type": "string",
            "enum": [
              "acs",
              "desc"
            ],
            "allowEmptyValue": false
          },
          {
            "name": "filter",
            "in": "query",
            "description": "The filtering rules to be applied when identifying the records to be supplied in the response message.",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "fields",
            "in": "query",
            "description": "To identify the range of fields that should be supplied in the response message.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "...tbd...",
            "schema": {
              "$ref": "#/definitions/Users.Type"
            },
            "headers": {
              "X-Total-Count": {
                "description": "The total number of resources that are available",
                "type": "integer"
              }
            }
          },
          "default": {
            "description": "StatusInfo Error Report",
            "schema": {
              "$ref": "#/definitions/imsx_StatusInfo.Type"
            }
          }
        }
      }
    },
    "/schools/{schoolSourcedId}/teachers": {
      "get": {
        "operationId": "getTeachersForSchool",
        "summary": "The REST read request message for the getTeachersForSchool() API call.",
        "tags": [
          "TeachersManagement"
        ],
        "description": "...not supplied...",
        "parameters": [
          {
            "name": "schoolSourcedId",
            "in": "path",
            "description": "...tbd...",
            "required": true,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "To define the download segmentation value i.e. the maximum number of records to be contained in the response.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "allowEmptyValue": false,
            "default": 100,
            "minimum": 1
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The number of the first record to be supplied in the segmented response message.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "allowEmptyValue": false,
            "default": 0,
            "minimum": 0
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Allows the client to resume retrieving results from where the previous page left off",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Identifies the sort criteria to be used for the records in the response message. Use with the orderBy parameter.",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "orderBy",
            "in": "query",
            "description": "The form of ordering for response to the sorted request i.e. ascending (asc) or descending (desc).",
            "required": false,
            "type": "string",
            "enum": [
              "acs",
              "desc"
            ],
            "allowEmptyValue": false
          },
          {
            "name": "filter",
            "in": "query",
            "description": "The filtering rules to be applied when identifying the records to be supplied in the response message.",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "fields",
            "in": "query",
            "description": "To identify the range of fields that should be supplied in the response message.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "...tbd...",
            "schema": {
              "$ref": "#/definitions/Users.Type"
            },
            "headers": {
              "X-Total-Count": {
                "description": "The total number of resources that are available",
                "type": "integer"
              }
            }
          },
          "default": {
            "description": "StatusInfo Error Report",
            "schema": {
              "$ref": "#/definitions/imsx_StatusInfo.Type"
            }
          }
        }
      }
    },
    "/schools/{schoolSourcedId}/terms": {
      "get": {
        "operationId": "getTermsForSchool",
        "summary": "The REST read request message for the getTermsForSchool() API call.",
        "tags": [
          "TermsManagement"
        ],
        "description": "...not supplied...",
        "parameters": [
          {
            "name": "schoolSourcedId",
            "in": "path",
            "description": "...tbd...",
            "required": true,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "To define the download segmentation value i.e. the maximum number of records to be contained in the response.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "allowEmptyValue": false,
            "default": 100,
            "minimum": 1
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The number of the first record to be supplied in the segmented response message.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "allowEmptyValue": false,
            "default": 0,
            "minimum": 0
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Allows the client to resume retrieving results from where the previous page left off",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Identifies the sort criteria to be used for the records in the response message. Use with the orderBy parameter.",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "orderBy",
            "in": "query",
            "description": "The form of ordering for response to the sorted request i.e. ascending (asc) or descending (desc).",
            "required": false,
            "type": "string",
            "enum": [
              "acs",
              "desc"
            ],
            "allowEmptyValue": false
          },
          {
            "name": "filter",
            "in": "query",
            "description": "The filtering rules to be applied when identifying the records to be supplied in the response message.",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "fields",
            "in": "query",
            "description": "To identify the range of fields that should be supplied in the response message.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "...tbd...",
            "schema": {
              "$ref": "#/definitions/MultipleAcademicSessions.Type"
            },
            "headers": {
              "X-Total-Count": {
                "description": "The total number of resources that are available",
                "type": "integer"
              }
            }
          },
          "default": {
            "description": "StatusInfo Error Report",
            "schema": {
              "$ref": "#/definitions/imsx_StatusInfo.Type"
            }
          }
        }
      }
    },
    "/schools/{sourcedId}": {
      "get": {
        "operationId": "getSchool",
        "summary": "The REST read request message for the getSchool() API call.",
        "tags": [
          "SchoolsManagement"
        ],
        "description": "...not supplied...",
        "parameters": [
          {
            "name": "sourcedId",
            "in": "path",
            "description": "...tbd...",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "...tbd...",
            "schema": {
              "$ref": "#/definitions/SingleOrg.Type"
            },
            "headers": {
              "X-Total-Count": {
                "description": "The total number of resources that are available",
                "type": "integer"
              }
            }
          },
          "default": {
            "description": "StatusInfo Error Report",
            "schema": {
              "$ref": "#/definitions/imsx_StatusInfo.Type"
            }
          }
        }
      }
    },
    "/students": {
      "get": {
        "operationId": "getStudents",
        "summary": "The REST read request message for the getStudents() API call.",
        "tags": [
          "StudentsManagement"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "To define the download segmentation value i.e. the maximum number of records to be contained in the response.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "allowEmptyValue": false,
            "default": 100,
            "minimum": 1
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The number of the first record to be supplied in the segmented response message.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "allowEmptyValue": false,
            "default": 0,
            "minimum": 0
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Allows the client to resume retrieving results from where the previous page left off",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Identifies the sort criteria to be used for the records in the response message. Use with the orderBy parameter.",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "orderBy",
            "in": "query",
            "description": "The form of ordering for response to the sorted request i.e. ascending (asc) or descending (desc).",
            "required": false,
            "type": "string",
            "enum": [
              "acs",
              "desc"
            ],
            "allowEmptyValue": false
          },
          {
            "name": "filter",
            "in": "query",
            "description": "The filtering rules to be applied when identifying the records to be supplied in the response message.",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "fields",
            "in": "query",
            "description": "To identify the range of fields that should be supplied in the response message.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "allowEmptyValue": false
          }
        ],
        "description": "...not supplied...",
        "responses": {
          "200": {
            "description": "...tbd...",
            "schema": {
              "$ref": "#/definitions/Users.Type"
            },
            "headers": {
              "X-Total-Count": {
                "description": "The total number of resources that are available",
                "type": "integer"
              }
            }
          },
          "default": {
            "description": "StatusInfo Error Report",
            "schema": {
              "$ref": "#/definitions/imsx_StatusInfo.Type"
            }
          }
        }
      }
    },
    "/students/{sourcedId}": {
      "get": {
        "operationId": "getStudent",
        "summary": "The REST read request message for the getStudent() API call.",
        "tags": [
          "StudentsManagement"
        ],
        "description": "...not supplied...",
        "parameters": [
          {
            "name": "sourcedId",
            "in": "path",
            "description": "...tbd...",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "...tbd...",
            "schema": {
              "$ref": "#/definitions/SingleUser.Type"
            },
            "headers": {
              "X-Total-Count": {
                "description": "The total number of resources that are available",
                "type": "integer"
              }
            }
          },
          "default": {
            "description": "StatusInfo Error Report",
            "schema": {
              "$ref": "#/definitions/imsx_StatusInfo.Type"
            }
          }
        }
      }
    },
    "/students/{studentSourcedId}/classes": {
      "get": {
        "operationId": "getClassesForStudent",
        "summary": "The REST read request message for the getClassesForStudent() API call.",
        "tags": [
          "ClassesManagement"
        ],
        "description": "...not supplied...",
        "parameters": [
          {
            "name": "studentSourcedId",
            "in": "path",
            "description": "...tbd...",
            "required": true,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "To define the download segmentation value i.e. the maximum number of records to be contained in the response.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "allowEmptyValue": false,
            "default": 100,
            "minimum": 1
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The number of the first record to be supplied in the segmented response message.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "allowEmptyValue": false,
            "default": 0,
            "minimum": 0
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Allows the client to resume retrieving results from where the previous page left off",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Identifies the sort criteria to be used for the records in the response message. Use with the orderBy parameter.",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "orderBy",
            "in": "query",
            "description": "The form of ordering for response to the sorted request i.e. ascending (asc) or descending (desc).",
            "required": false,
            "type": "string",
            "enum": [
              "acs",
              "desc"
            ],
            "allowEmptyValue": false
          },
          {
            "name": "filter",
            "in": "query",
            "description": "The filtering rules to be applied when identifying the records to be supplied in the response message.",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "fields",
            "in": "query",
            "description": "To identify the range of fields that should be supplied in the response message.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "...tbd...",
            "schema": {
              "$ref": "#/definitions/Classes.Type"
            },
            "headers": {
              "X-Total-Count": {
                "description": "The total number of resources that are available",
                "type": "integer"
              }
            }
          },
          "default": {
            "description": "StatusInfo Error Report",
            "schema": {
              "$ref": "#/definitions/imsx_StatusInfo.Type"
            }
          }
        }
      }
    },
    "/teachers": {
      "get": {
        "operationId": "getTeachers",
        "summary": "The REST read request message for the getTeachers() API call.",
        "tags": [
          "TeachersManagement"
        ],
        "description": "...not supplied...",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "To define the download segmentation value i.e. the maximum number of records to be contained in the response.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "allowEmptyValue": false,
            "default": 100,
            "minimum": 1
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The number of the first record to be supplied in the segmented response message.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "allowEmptyValue": false,
            "default": 0,
            "minimum": 0
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Allows the client to resume retrieving results from where the previous page left off",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Identifies the sort criteria to be used for the records in the response message. Use with the orderBy parameter.",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "orderBy",
            "in": "query",
            "description": "The form of ordering for response to the sorted request i.e. ascending (asc) or descending (desc).",
            "required": false,
            "type": "string",
            "enum": [
              "acs",
              "desc"
            ],
            "allowEmptyValue": false
          },
          {
            "name": "filter",
            "in": "query",
            "description": "The filtering rules to be applied when identifying the records to be supplied in the response message.",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "fields",
            "in": "query",
            "description": "To identify the range of fields that should be supplied in the response message.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "...tbd...",
            "schema": {
              "$ref": "#/definitions/Users.Type"
            },
            "headers": {
              "X-Total-Count": {
                "description": "The total number of resources that are available",
                "type": "integer"
              }
            }
          },
          "default": {
            "description": "StatusInfo Error Report",
            "schema": {
              "$ref": "#/definitions/imsx_StatusInfo.Type"
            }
          }
        }
      }
    },
    "/teachers/{sourcedId}": {
      "get": {
        "operationId": "getTeacher",
        "summary": "The REST read request message for the getTeacher() API call.",
        "tags": [
          "TeachersManagement"
        ],
        "description": "...not supplied...",
        "parameters": [
          {
            "name": "sourcedId",
            "in": "path",
            "description": "...tbd...",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "...tbd...",
            "schema": {
              "$ref": "#/definitions/SingleUser.Type"
            },
            "headers": {
              "X-Total-Count": {
                "description": "The total number of resources that are available",
                "type": "integer"
              }
            }
          },
          "default": {
            "description": "StatusInfo Error Report",
            "schema": {
              "$ref": "#/definitions/imsx_StatusInfo.Type"
            }
          }
        }
      }
    },
    "/teachers/{teacherSourcedId}/classes": {
      "get": {
        "operationId": "getClassesForTeacher",
        "summary": "The REST read request message for the getClassesForTeacher() API call.",
        "tags": [
          "ClassesManagement"
        ],
        "description": "...not supplied...",
        "parameters": [
          {
            "name": "teacherSourcedId",
            "in": "path",
            "description": "...tbd...",
            "required": true,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "To define the download segmentation value i.e. the maximum number of records to be contained in the response.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "allowEmptyValue": false,
            "default": 100,
            "minimum": 1
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The number of the first record to be supplied in the segmented response message.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "allowEmptyValue": false,
            "default": 0,
            "minimum": 0
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Allows the client to resume retrieving results from where the previous page left off",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Identifies the sort criteria to be used for the records in the response message. Use with the orderBy parameter.",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "orderBy",
            "in": "query",
            "description": "The form of ordering for response to the sorted request i.e. ascending (asc) or descending (desc).",
            "required": false,
            "type": "string",
            "enum": [
              "acs",
              "desc"
            ],
            "allowEmptyValue": false
          },
          {
            "name": "filter",
            "in": "query",
            "description": "The filtering rules to be applied when identifying the records to be supplied in the response message.",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "fields",
            "in": "query",
            "description": "To identify the range of fields that should be supplied in the response message.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "...tbd...",
            "schema": {
              "$ref": "#/definitions/Classes.Type"
            },
            "headers": {
              "X-Total-Count": {
                "description": "The total number of resources that are available",
                "type": "integer"
              }
            }
          },
          "default": {
            "description": "StatusInfo Error Report",
            "schema": {
              "$ref": "#/definitions/imsx_StatusInfo.Type"
            }
          }
        }
      }
    },
    "/terms": {
      "get": {
        "operationId": "getTerms",
        "summary": "The REST read request message for the getTerms() API call.",
        "tags": [
          "TermsManagement"
        ],
        "description": "...not supplied...",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "To define the download segmentation value i.e. the maximum number of records to be contained in the response.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "allowEmptyValue": false,
            "default": 100,
            "minimum": 1
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The number of the first record to be supplied in the segmented response message.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "allowEmptyValue": false,
            "default": 0,
            "minimum": 0
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Allows the client to resume retrieving results from where the previous page left off",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Identifies the sort criteria to be used for the records in the response message. Use with the orderBy parameter.",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "orderBy",
            "in": "query",
            "description": "The form of ordering for response to the sorted request i.e. ascending (asc) or descending (desc).",
            "required": false,
            "type": "string",
            "enum": [
              "acs",
              "desc"
            ],
            "allowEmptyValue": false
          },
          {
            "name": "filter",
            "in": "query",
            "description": "The filtering rules to be applied when identifying the records to be supplied in the response message.",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "fields",
            "in": "query",
            "description": "To identify the range of fields that should be supplied in the response message.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "...tbd...",
            "schema": {
              "$ref": "#/definitions/MultipleAcademicSessions.Type"
            },
            "headers": {
              "X-Total-Count": {
                "description": "The total number of resources that are available",
                "type": "integer"
              }
            }
          },
          "default": {
            "description": "StatusInfo Error Report",
            "schema": {
              "$ref": "#/definitions/imsx_StatusInfo.Type"
            }
          }
        }
      }
    },
    "/terms/{sourcedId}": {
      "get": {
        "operationId": "getTerm",
        "summary": "The REST read request message for the getTerm() API call.",
        "tags": [
          "TermsManagement"
        ],
        "description": "...not supplied...",
        "parameters": [
          {
            "name": "sourcedId",
            "in": "path",
            "description": "...tbd...",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "...tbd...",
            "schema": {
              "$ref": "#/definitions/SingleAcademicSession.Type"
            },
            "headers": {
              "X-Total-Count": {
                "description": "The total number of resources that are available",
                "type": "integer"
              }
            }
          },
          "default": {
            "description": "StatusInfo Error Report",
            "schema": {
              "$ref": "#/definitions/imsx_StatusInfo.Type"
            }
          }
        }
      }
    },
    "/terms/{termSourcedId}/classes": {
      "get": {
        "operationId": "getClassesForTerm",
        "summary": "The REST read request message for the getClassesForTerm() API call.",
        "tags": [
          "ClassesManagement"
        ],
        "description": "...not supplied...",
        "parameters": [
          {
            "name": "termSourcedId",
            "in": "path",
            "description": "...tbd...",
            "required": true,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "To define the download segmentation value i.e. the maximum number of records to be contained in the response.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "allowEmptyValue": false,
            "default": 100,
            "minimum": 1
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The number of the first record to be supplied in the segmented response message.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "allowEmptyValue": false,
            "default": 0,
            "minimum": 0
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Allows the client to resume retrieving results from where the previous page left off",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Identifies the sort criteria to be used for the records in the response message. Use with the orderBy parameter.",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "orderBy",
            "in": "query",
            "description": "The form of ordering for response to the sorted request i.e. ascending (asc) or descending (desc).",
            "required": false,
            "type": "string",
            "enum": [
              "acs",
              "desc"
            ],
            "allowEmptyValue": false
          },
          {
            "name": "filter",
            "in": "query",
            "description": "The filtering rules to be applied when identifying the records to be supplied in the response message.",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "fields",
            "in": "query",
            "description": "To identify the range of fields that should be supplied in the response message.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "...tbd...",
            "schema": {
              "$ref": "#/definitions/Classes.Type"
            },
            "headers": {
              "X-Total-Count": {
                "description": "The total number of resources that are available",
                "type": "integer"
              }
            }
          },
          "default": {
            "description": "StatusInfo Error Report",
            "schema": {
              "$ref": "#/definitions/imsx_StatusInfo.Type"
            }
          }
        }
      }
    },
    "/terms/{termSourcedId}/gradingPeriods": {
      "get": {
        "operationId": "getGradingPeriodsForTerm",
        "summary": "The REST read request message for the getGradingPeriodsForTerm() API call.",
        "tags": [
          "GradingPeriodsManagement"
        ],
        "description": "...not supplied...",
        "parameters": [
          {
            "name": "termSourcedId",
            "in": "path",
            "description": "...tbd...",
            "required": true,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "To define the download segmentation value i.e. the maximum number of records to be contained in the response.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "allowEmptyValue": false,
            "default": 100,
            "minimum": 1
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The number of the first record to be supplied in the segmented response message.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "allowEmptyValue": false,
            "default": 0,
            "minimum": 0
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Allows the client to resume retrieving results from where the previous page left off",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Identifies the sort criteria to be used for the records in the response message. Use with the orderBy parameter.",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "orderBy",
            "in": "query",
            "description": "The form of ordering for response to the sorted request i.e. ascending (asc) or descending (desc).",
            "required": false,
            "type": "string",
            "enum": [
              "acs",
              "desc"
            ],
            "allowEmptyValue": false
          },
          {
            "name": "filter",
            "in": "query",
            "description": "The filtering rules to be applied when identifying the records to be supplied in the response message.",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "fields",
            "in": "query",
            "description": "To identify the range of fields that should be supplied in the response message.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "...tbd...",
            "schema": {
              "$ref": "#/definitions/MultipleAcademicSessions.Type"
            },
            "headers": {
              "X-Total-Count": {
                "description": "The total number of resources that are available",
                "type": "integer"
              }
            }
          },
          "default": {
            "description": "StatusInfo Error Report",
            "schema": {
              "$ref": "#/definitions/imsx_StatusInfo.Type"
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "operationId": "getUsers",
        "summary": "The REST read request message for the getUsers() API call.",
        "tags": [
          "UsersManagement"
        ],
        "description": "...not supplied...",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "To define the download segmentation value i.e. the maximum number of records to be contained in the response.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "allowEmptyValue": false,
            "default": 100,
            "minimum": 1
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The number of the first record to be supplied in the segmented response message.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "allowEmptyValue": false,
            "default": 0,
            "minimum": 0
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Allows the client to resume retrieving results from where the previous page left off",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Identifies the sort criteria to be used for the records in the response message. Use with the orderBy parameter.",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "orderBy",
            "in": "query",
            "description": "The form of ordering for response to the sorted request i.e. ascending (asc) or descending (desc).",
            "required": false,
            "type": "string",
            "enum": [
              "acs",
              "desc"
            ],
            "allowEmptyValue": false
          },
          {
            "name": "filter",
            "in": "query",
            "description": "The filtering rules to be applied when identifying the records to be supplied in the response message.",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "fields",
            "in": "query",
            "description": "To identify the range of fields that should be supplied in the response message.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "...tbd...",
            "schema": {
              "$ref": "#/definitions/Users.Type"
            },
            "headers": {
              "X-Total-Count": {
                "description": "The total number of resources that are available",
                "type": "integer"
              }
            }
          },
          "default": {
            "description": "StatusInfo Error Report",
            "schema": {
              "$ref": "#/definitions/imsx_StatusInfo.Type"
            }
          }
        }
      }
    },
    "/users/{sourcedId}": {
      "get": {
        "operationId": "getUser",
        "summary": "The REST read request message for the getUser() API call.",
        "tags": [
          "UsersManagement"
        ],
        "description": "...not supplied...",
        "parameters": [
          {
            "name": "sourcedId",
            "in": "path",
            "description": "...tbd...",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "...tbd...",
            "schema": {
              "$ref": "#/definitions/SingleUser.Type"
            },
            "headers": {
              "X-Total-Count": {
                "description": "The total number of resources that are available",
                "type": "integer"
              }
            }
          },
          "default": {
            "description": "StatusInfo Error Report",
            "schema": {
              "$ref": "#/definitions/imsx_StatusInfo.Type"
            }
          }
        }
      }
    },
    "/users/{userSourcedId}/classes": {
      "get": {
        "operationId": "getClassesForUser",
        "summary": "The REST read request message for the getClassesForUser() API call.",
        "tags": [
          "ClassesManagement"
        ],
        "description": "...not supplied...",
        "parameters": [
          {
            "name": "userSourcedId",
            "in": "path",
            "description": "...tbd...",
            "required": true,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "To define the download segmentation value i.e. the maximum number of records to be contained in the response.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "allowEmptyValue": false,
            "default": 100,
            "minimum": 1
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The number of the first record to be supplied in the segmented response message.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "allowEmptyValue": false,
            "default": 0,
            "minimum": 0
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Allows the client to resume retrieving results from where the previous page left off",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Identifies the sort criteria to be used for the records in the response message. Use with the orderBy parameter.",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "orderBy",
            "in": "query",
            "description": "The form of ordering for response to the sorted request i.e. ascending (asc) or descending (desc).",
            "required": false,
            "type": "string",
            "enum": [
              "acs",
              "desc"
            ],
            "allowEmptyValue": false
          },
          {
            "name": "filter",
            "in": "query",
            "description": "The filtering rules to be applied when identifying the records to be supplied in the response message.",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "fields",
            "in": "query",
            "description": "To identify the range of fields that should be supplied in the response message.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "...tbd...",
            "schema": {
              "$ref": "#/definitions/Classes.Type"
            },
            "headers": {
              "X-Total-Count": {
                "description": "The total number of resources that are available",
                "type": "integer"
              }
            }
          },
          "default": {
            "description": "StatusInfo Error Report",
            "schema": {
              "$ref": "#/definitions/imsx_StatusInfo.Type"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "AcademicSession.Type": {
      "description": "...tbd (Class description)...",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Base.Type"
        },
        {
          "type": "object",
          "properties": {
            "title": {
              "description": "Model Primitive Datatype = NormalizedString",
              "type": "string"
            },
            "startDate": {
              "description": "Model Primitive Datatype = Date",
              "type": "string",
              "format": "date"
            },
            "endDate": {
              "description": "Model Primitive Datatype = Date",
              "type": "string",
              "format": "date"
            },
            "type": {
              "type": "string",
              "enum": [
                "gradingPeriod",
                "semester",
                "schoolYear",
                "term"
              ]
            },
            "parent": {
              "$ref": "#/definitions/GUIDRef.Type"
            },
            "children": {
              "type": "array",
              "minItems": 0,
              "items": {
                "$ref": "#/definitions/GUIDRef.Type"
              }
            },
            "schoolYear": {
              "description": "Model Primitive Datatype = NormalizedString",
              "type": "string"
            }
          },
          "required": [
            "title",
            "startDate",
            "endDate",
            "type",
            "schoolYear"
          ],
          "additionalProperties": false
        }
      ]
    },
    "MultipleAcademicSessions.Type": {
      "description": "...tbd (Class description)...",
      "type": "object",
      "properties": {
        "academicSessions": {
          "type": "array",
          "minItems": 0,
          "items": {
            "$ref": "#/definitions/AcademicSession.Type"
          }
        }
      },
      "additionalProperties": false
    },
    "Base.Type": {
      "description": "...tbd (Class description)...",
      "type": "object",
      "properties": {
        "sourcedId": {
          "$ref": "#/definitions/GUID.Type"
        },
        "status": {
          "type": "string",
          "enum": [
            "active",
            "tobedeleted"
          ]
        },
        "dateLastModified": {
          "description": "Model Primitive Datatype = DateTime",
          "type": "string",
          "format": "date-time"
        },
        "metadata": {
          "$ref": "#/definitions/Metadata.Type"
        }
      },
      "required": [
        "sourcedId",
        "status",
        "dateLastModified"
      ],
      "additionalProperties": false
    },
    "Categories.Type": {
      "description": "...tbd (Class description)...",
      "type": "object",
      "properties": {
        "categories": {
          "type": "array",
          "minItems": 0,
          "items": {
            "$ref": "#/definitions/Category.Type"
          }
        }
      },
      "additionalProperties": false
    },
    "Category.Type": {
      "description": "...tbd (Class description)...",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Base.Type"
        },
        {
          "type": "object",
          "properties": {
            "title": {
              "description": "Model Primitive Datatype = NormalizedString",
              "type": "string"
            }
          },
          "required": [
            "title"
          ],
          "additionalProperties": false
        }
      ]
    },
    "Class.Type": {
      "description": "...tbd (Class description)...",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Base.Type"
        },
        {
          "type": "object",
          "properties": {
            "title": {
              "description": "Model Primitive Datatype = NormalizedString",
              "type": "string"
            },
            "classCode": {
              "description": "Model Primitive Datatype = NormalizedString",
              "type": "string"
            },
            "classType": {
              "type": "string",
              "enum": [
                "homeroom",
                "scheduled"
              ]
            },
            "location": {
              "description": "Model Primitive Datatype = NormalizedString",
              "type": "string"
            },
            "grades": {
              "description": "Model Primitive Datatype = NormalizedString",
              "type": "array",
              "minItems": 0,
              "items": {
                "type": "string"
              }
            },
            "subjects": {
              "description": "Model Primitive Datatype = NormalizedString",
              "type": "array",
              "minItems": 0,
              "items": {
                "type": "string"
              }
            },
            "course": {
              "$ref": "#/definitions/GUIDRef.Type"
            },
            "school": {
              "$ref": "#/definitions/GUIDRef.Type"
            },
            "terms": {
              "type": "array",
              "minItems": 0,
              "items": {
                "$ref": "#/definitions/GUIDRef.Type"
              }
            },
            "subjectCodes": {
              "description": "Model Primitive Datatype = NormalizedString",
              "type": "array",
              "minItems": 0,
              "items": {
                "type": "string"
              }
            },
            "periods": {
              "description": "Model Primitive Datatype = NormalizedString",
              "type": "string"
            },
            "resources": {
              "type": "array",
              "minItems": 0,
              "items": {
                "$ref": "#/definitions/GUIDRef.Type"
              }
            }
          },
          "required": [
            "title",
            "school"
          ],
          "additionalProperties": false
        }
      ]
    },
    "Classes.Type": {
      "description": "...tbd (Class description)...",
      "type": "object",
      "properties": {
        "classes": {
          "type": "array",
          "minItems": 0,
          "items": {
            "$ref": "#/definitions/Class.Type"
          }
        }
      },
      "additionalProperties": false
    },
    "Course.Type": {
      "description": "...tbd (Class description)...",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Base.Type"
        },
        {
          "type": "object",
          "properties": {
            "title": {
              "description": "Model Primitive Datatype = NormalizedString",
              "type": "string"
            },
            "schoolYear": {
              "$ref": "#/definitions/GUIDRef.Type"
            },
            "courseCode": {
              "description": "Model Primitive Datatype = NormalizedString",
              "type": "string"
            },
            "grades": {
              "description": "Model Primitive Datatype = NormalizedString",
              "type": "array",
              "minItems": 0,
              "items": {
                "type": "string"
              }
            },
            "subjects": {
              "description": "Model Primitive Datatype = NormalizedString",
              "type": "array",
              "minItems": 0,
              "items": {
                "type": "string"
              }
            },
            "org": {
              "$ref": "#/definitions/GUIDRef.Type"
            },
            "subjectCodes": {
              "description": "Model Primitive Datatype = NormalizedString",
              "type": "array",
              "minItems": 0,
              "items": {
                "type": "string"
              }
            },
            "resources": {
              "type": "array",
              "minItems": 0,
              "items": {
                "$ref": "#/definitions/GUIDRef.Type"
              }
            }
          },
          "required": [
            "title",
            "courseCode"
          ],
          "additionalProperties": false
        }
      ]
    },
    "Courses.Type": {
      "description": "...tbd (Class description)...",
      "type": "object",
      "properties": {
        "courses": {
          "type": "array",
          "minItems": 0,
          "items": {
            "$ref": "#/definitions/Course.Type"
          }
        }
      },
      "additionalProperties": false
    },
    "Demographic.Type": {
      "description": "...tbd (Class description)...",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Base.Type"
        },
        {
          "type": "object",
          "properties": {
            "birthDate": {
              "description": "Model Primitive Datatype = Date",
              "type": "string",
              "format": "date"
            },
            "sex": {
              "type": "string",
              "enum": [
                "male",
                "female"
              ]
            },
            "americanIndianOrAlaskaNative": {
              "description": "Model Primitive Datatype = Boolean",
              "type": "boolean"
            },
            "asian": {
              "description": "Model Primitive Datatype = Boolean",
              "type": "boolean"
            },
            "blackOrAfricanAmerican": {
              "description": "Model Primitive Datatype = Boolean",
              "type": "boolean"
            },
            "nativeHawaiianOrOtherPacificIslander": {
              "description": "Model Primitive Datatype = Boolean",
              "type": "boolean"
            },
            "white": {
              "description": "Model Primitive Datatype = Boolean",
              "type": "boolean"
            },
            "demographicRaceTwoOrMoreRaces": {
              "description": "Model Primitive Datatype = Boolean",
              "type": "boolean"
            },
            "hispanicOrLatinoEthnicity": {
              "description": "Model Primitive Datatype = Boolean",
              "type": "boolean"
            },
            "countryOfBirthCode": {
              "description": "Model Primitive Datatype = NormalizedString",
              "type": "string"
            },
            "stateOfBirthAbbreviation": {
              "description": "Model Primitive Datatype = NormalizedString",
              "type": "string"
            },
            "cityOfBirth": {
              "description": "Model Primitive Datatype = NormalizedString",
              "type": "string"
            },
            "publicSchoolResidenceStatus": {
              "description": "Model Primitive Datatype = NormalizedString",
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "Demographics.Type": {
      "description": "...tbd (Class description)...",
      "type": "object",
      "properties": {
        "demographics": {
          "type": "array",
          "minItems": 0,
          "items": {
            "$ref": "#/definitions/Demographic.Type"
          }
        }
      },
      "additionalProperties": false
    },
    "Enrollment.Type": {
      "description": "...tbd (Class description)...",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Base.Type"
        },
        {
          "type": "object",
          "properties": {
            "user": {
              "$ref": "#/definitions/GUIDRef.Type"
            },
            "class": {
              "$ref": "#/definitions/GUIDRef.Type"
            },
            "school": {
              "$ref": "#/definitions/GUIDRef.Type"
            },
            "role": {
              "type": "string",
              "enum": [
                "administrator",
                "aide",
                "guardian",
                "parent",
                "proctor",
                "relative",
                "student",
                "teacher"
              ]
            },
            "primary": {
              "description": "Model Primitive Datatype = Boolean",
              "type": "boolean"
            },
            "beginDate": {
              "description": "Model Primitive Datatype = Date",
              "type": "string",
              "format": "date"
            },
            "endDate": {
              "description": "Model Primitive Datatype = Date",
              "type": "string",
              "format": "date"
            }
          },
          "required": [
            "user",
            "class",
            "school",
            "role"
          ],
          "additionalProperties": false
        }
      ]
    },
    "Enrollments.Type": {
      "description": "...tbd (Class description)...",
      "type": "object",
      "properties": {
        "enrollments": {
          "type": "array",
          "minItems": 0,
          "items": {
            "$ref": "#/definitions/Enrollment.Type"
          }
        }
      },
      "additionalProperties": false
    },
    "GUID.Type": {
      "description": "...tbd (Class description)...",
      "type": "string"
    },
    "GUIDRef.Type": {
      "description": "...tbd (Class description)...",
      "type": "object",
      "properties": {
        "href": {
          "description": "Model Primitive Datatype = AnyURI",
          "type": "string",
          "format": "uri"
        },
        "sourcedId": {
          "$ref": "#/definitions/GUID.Type"
        },
        "type": {
          "type": "string",
          "enum": [
            "academicSession",
            "category",
            "class",
            "course",
            "demographics",
            "enrollment",
            "lineItem",
            "org",
            "resource",
            "result",
            "student",
            "teacher",
            "user",
            "term",
            "gradingPeriod"
          ]
        }
      },
      "required": [
        "href",
        "sourcedId",
        "type"
      ],
      "additionalProperties": false
    },
    "Identifier.Type": {
      "description": "...tbd (Class description)...",
      "type": "string"
    },
    "LineItem.Type": {
      "description": "...tbd (Class description)...",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Base.Type"
        },
        {
          "type": "object",
          "properties": {
            "title": {
              "description": "Model Primitive Datatype = NormalizedString",
              "type": "string"
            },
            "description": {
              "description": "Model Primitive Datatype = String",
              "type": "string"
            },
            "assignDate": {
              "description": "Model Primitive Datatype = DateTime",
              "type": "string",
              "format": "date-time"
            },
            "dueDate": {
              "description": "Model Primitive Datatype = DateTime",
              "type": "string",
              "format": "date-time"
            },
            "class": {
              "$ref": "#/definitions/GUIDRef.Type"
            },
            "category": {
              "$ref": "#/definitions/GUIDRef.Type"
            },
            "gradingPeriod": {
              "$ref": "#/definitions/GUIDRef.Type"
            },
            "resultValueMin": {
              "description": "Model Primitive Datatype = Float",
              "type": "number",
              "format": "float"
            },
            "resultValueMax": {
              "description": "Model Primitive Datatype = Float",
              "type": "number",
              "format": "float"
            }
          },
          "required": [
            "title",
            "assignDate",
            "class",
            "category",
            "resultValueMin"
          ],
          "additionalProperties": false
        }
      ]
    },
    "LineItems.Type": {
      "description": "...tbd (Class description)...",
      "type": "object",
      "properties": {
        "lineItems": {
          "type": "array",
          "minItems": 0,
          "items": {
            "$ref": "#/definitions/LineItem.Type"
          }
        }
      },
      "additionalProperties": false
    },
    "Metadata.Type": {
      "description": "...tbd (Class description)...",
      "type": "object",
      "properties": {},
      "additionalProperties": true
    },
    "Org.Type": {
      "description": "...tbd (Class description)...",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Base.Type"
        },
        {
          "type": "object",
          "properties": {
            "name": {
              "description": "Model Primitive Datatype = NormalizedString",
              "type": "string"
            },
            "type": {
              "type": "string",
              "enum": [
                "department",
                "district",
                "local",
                "national",
                "school",
                "state"
              ]
            },
            "identifier": {
              "$ref": "#/definitions/Identifier.Type"
            },
            "parent": {
              "$ref": "#/definitions/GUIDRef.Type"
            },
            "children": {
              "type": "array",
              "minItems": 0,
              "items": {
                "$ref": "#/definitions/GUIDRef.Type"
              }
            }
          },
          "required": [
            "name",
            "type",
            "identifier"
          ],
          "additionalProperties": false
        }
      ]
    },
    "Orgs.Type": {
      "description": "...tbd (Class description)...",
      "type": "object",
      "properties": {
        "orgs": {
          "type": "array",
          "minItems": 0,
          "items": {
            "$ref": "#/definitions/Org.Type"
          }
        }
      },
      "additionalProperties": false
    },
    "Resource.Type": {
      "description": "...tbd (Class description)...",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Base.Type"
        },
        {
          "type": "object",
          "properties": {
            "title": {
              "description": "Model Primitive Datatype = NormalizedString",
              "type": "string"
            },
            "role": {
              "type": "string",
              "enum": [
                "administrator",
                "aide",
                "guardian",
                "parent",
                "proctor",
                "relative",
                "student",
                "teacher"
              ]
            },
            "importance": {
              "type": "string",
              "enum": [
                "primary",
                "secondary"
              ]
            },
            "vendorResourceId": {
              "$ref": "#/definitions/Identifier.Type"
            },
            "vendorId": {
              "$ref": "#/definitions/Identifier.Type"
            },
            "applicationId": {
              "$ref": "#/definitions/Identifier.Type"
            }
          },
          "required": [
            "vendorResourceId"
          ],
          "additionalProperties": false
        }
      ]
    },
    "Resources.Type": {
      "description": "...tbd (Class description)...",
      "type": "object",
      "properties": {
        "resources": {
          "type": "array",
          "minItems": 0,
          "items": {
            "$ref": "#/definitions/Resource.Type"
          }
        }
      },
      "additionalProperties": false
    },
    "Result.Type": {
      "description": "...tbd (Class description)...",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Base.Type"
        },
        {
          "type": "object",
          "properties": {
            "lineItem": {
              "$ref": "#/definitions/GUIDRef.Type"
            },
            "student": {
              "$ref": "#/definitions/GUIDRef.Type"
            },
            "scoreStatus": {
              "type": "string",
              "enum": [
                "exempt",
                "fully graded",
                "not submmitted",
                "partially graded",
                "submitted"
              ]
            },
            "score": {
              "description": "Model Primitive Datatype = Float",
              "type": "number",
              "format": "float"
            },
            "scoreDate": {
              "description": "Model Primitive Datatype = Date",
              "type": "string",
              "format": "date"
            },
            "comment": {
              "description": "Model Primitive Datatype = String",
              "type": "string"
            }
          },
          "required": [
            "lineItem",
            "student",
            "scoreStatus",
            "score",
            "scoreDate"
          ],
          "additionalProperties": false
        }
      ]
    },
    "Results.Type": {
      "description": "...tbd (Class description)...",
      "type": "object",
      "properties": {
        "results": {
          "type": "array",
          "minItems": 0,
          "items": {
            "$ref": "#/definitions/Result.Type"
          }
        }
      },
      "additionalProperties": false
    },
    "SingleAcademicSession.Type": {
      "description": "...tbd (Class description)...",
      "type": "object",
      "properties": {
        "academicSession": {
          "$ref": "#/definitions/AcademicSession.Type"
        }
      },
      "required": [
        "academicSession"
      ],
      "additionalProperties": false
    },
    "SingleCategory.Type": {
      "description": "...tbd (Class description)...",
      "type": "object",
      "properties": {
        "category": {
          "$ref": "#/definitions/Category.Type"
        }
      },
      "required": [
        "category"
      ],
      "additionalProperties": false
    },
    "SingleClass.Type": {
      "description": "...tbd (Class description)...",
      "type": "object",
      "properties": {
        "class": {
          "$ref": "#/definitions/Class.Type"
        }
      },
      "required": [
        "class"
      ],
      "additionalProperties": false
    },
    "SingleCourse.Type": {
      "description": "...tbd (Class description)...",
      "type": "object",
      "properties": {
        "course": {
          "$ref": "#/definitions/Course.Type"
        }
      },
      "required": [
        "course"
      ],
      "additionalProperties": false
    },
    "SingleDemographics.Type": {
      "description": "...tbd (Class description)...",
      "type": "object",
      "properties": {
        "demographics": {
          "$ref": "#/definitions/Demographic.Type"
        }
      },
      "required": [
        "demographics"
      ],
      "additionalProperties": false
    },
    "SingleEnrollment.Type": {
      "description": "...tbd (Class description)...",
      "type": "object",
      "properties": {
        "enrollment": {
          "$ref": "#/definitions/Enrollment.Type"
        }
      },
      "required": [
        "enrollment"
      ],
      "additionalProperties": false
    },
    "SingleLineItem.Type": {
      "description": "...tbd (Class description)...",
      "type": "object",
      "properties": {
        "lineItem": {
          "$ref": "#/definitions/LineItem.Type"
        }
      },
      "required": [
        "lineItem"
      ],
      "additionalProperties": false
    },
    "SingleOrg.Type": {
      "description": "...tbd (Class description)...",
      "type": "object",
      "properties": {
        "org": {
          "$ref": "#/definitions/Org.Type"
        }
      },
      "required": [
        "org"
      ],
      "additionalProperties": false
    },
    "SingleResource.Type": {
      "description": "...tbd (Class description)...",
      "type": "object",
      "properties": {
        "resource": {
          "$ref": "#/definitions/Resource.Type"
        }
      },
      "required": [
        "resource"
      ],
      "additionalProperties": false
    },
    "SingleResult.Type": {
      "description": "...tbd (Class description)...",
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/Result.Type"
        }
      },
      "required": [
        "result"
      ],
      "additionalProperties": false
    },
    "SingleUser.Type": {
      "description": "...tbd (Class description)...",
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/User.Type"
        }
      },
      "required": [
        "user"
      ],
      "additionalProperties": false
    },
    "User.Type": {
      "description": "...tbd (Class description)...",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Base.Type"
        },
        {
          "type": "object",
          "properties": {
            "username": {
              "description": "Model Primitive Datatype = NormalizedString",
              "type": "string"
            },
            "userIds": {
              "type": "array",
              "minItems": 0,
              "items": {
                "$ref": "#/definitions/UserId.Type"
              }
            },
            "enabledUser": {
              "description": "Model Primitive Datatype = Boolean",
              "type": "boolean"
            },
            "givenName": {
              "description": "Model Primitive Datatype = NormalizedString",
              "type": "string"
            },
            "familyName": {
              "description": "Model Primitive Datatype = NormalizedString",
              "type": "string"
            },
            "middleName": {
              "description": "Model Primitive Datatype = NormalizedString",
              "type": "string"
            },
            "role": {
              "type": "string",
              "enum": [
                "administrator",
                "aide",
                "guardian",
                "parent",
                "proctor",
                "relative",
                "student",
                "teacher"
              ]
            },
            "identifier": {
              "$ref": "#/definitions/Identifier.Type"
            },
            "email": {
              "description": "Model Primitive Datatype = NormalizedString",
              "type": "string"
            },
            "sms": {
              "description": "Model Primitive Datatype = NormalizedString",
              "type": "string"
            },
            "phone": {
              "description": "Model Primitive Datatype = NormalizedString",
              "type": "string"
            },
            "agents": {
              "type": "array",
              "minItems": 0,
              "items": {
                "$ref": "#/definitions/GUIDRef.Type"
              }
            },
            "orgs": {
              "type": "array",
              "minItems": 1,
              "items": {
                "$ref": "#/definitions/GUIDRef.Type"
              }
            },
            "grades": {
              "description": "Model Primitive Datatype = NormalizedString",
              "type": "array",
              "minItems": 0,
              "items": {
                "type": "string"
              }
            },
            "password": {
              "description": "Model Primitive Datatype = String",
              "type": "string"
            }
          },
          "required": [
            "username",
            "givenName",
            "familyName",
            "role",
            "orgs"
          ],
          "additionalProperties": false
        }
      ]
    },
    "UserId.Type": {
      "description": "...tbd (Class description)...",
      "type": "object",
      "properties": {
        "type": {
          "description": "Model Primitive Datatype = NormalizedString",
          "type": "string"
        },
        "identifier": {
          "$ref": "#/definitions/Identifier.Type"
        }
      },
      "required": [
        "identifier"
      ],
      "additionalProperties": false
    },
    "Users.Type": {
      "description": "...tbd (Class description)...",
      "type": "object",
      "properties": {
        "users": {
          "type": "array",
          "minItems": 0,
          "items": {
            "$ref": "#/definitions/User.Type"
          }
        }
      },
      "additionalProperties": false
    },
    "imsx_CodeMinor.Type": {
      "description": "...tbd (Class description)...",
      "type": "object",
      "properties": {
        "imsx_codeMinorField": {
          "type": "array",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/imsx_CodeMinorField.Type"
          }
        }
      },
      "required": [
        "imsx_codeMinorField"
      ],
      "additionalProperties": false
    },
    "imsx_CodeMinorField.Type": {
      "description": "...tbd (Class description)...",
      "type": "object",
      "properties": {
        "imsx_codeMinorFieldName": {
          "description": "Model Primitive Datatype = NormalizedString",
          "type": "string"
        },
        "imsx_codeMinorFieldValue": {
          "type": "string",
          "enum": [
            "fullsuccess",
            "invalid_sort_field",
            "invalid_selection_field",
            "invaliddata",
            "unauthorisedrequest",
            "linkfailure",
            "unsupportedoperation",
            "deletefailure",
            "unknownobject",
            "targetreadfailure"
          ]
        }
      },
      "required": [
        "imsx_codeMinorFieldName",
        "imsx_codeMinorFieldValue"
      ],
      "additionalProperties": false
    },
    "imsx_StatusInfo.Type": {
      "description": "...tbd (Class description)...",
      "type": "object",
      "properties": {
        "imsx_codeMajor": {
          "type": "string",
          "enum": [
            "success",
            "processing",
            "failure",
            "unsupported"
          ]
        },
        "imsx_severity": {
          "type": "string",
          "enum": [
            "status",
            "warning",
            "error"
          ]
        },
        "imsx_messageRefIdentifier": {
          "description": "Model Primitive Datatype = NormalizedString",
          "type": "string"
        },
        "imsx_operationRefIdentifier": {
          "description": "Model Primitive Datatype = NormalizedString",
          "type": "array",
          "minItems": 0,
          "items": {
            "type": "string"
          }
        },
        "imsx_description": {
          "description": "Model Primitive Datatype = String",
          "type": "string"
        },
        "imsx_CodeMinor": {
          "$ref": "#/definitions/imsx_CodeMinor.Type"
        }
      },
      "required": [
        "imsx_codeMajor",
        "imsx_severity",
        "imsx_messageRefIdentifier"
      ],
      "additionalProperties": false
    }
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ]
}